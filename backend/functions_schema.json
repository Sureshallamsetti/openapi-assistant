[
  {
    "name": "connectivity_check",
    "description": "POST /connectivity/check",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": "False"
        },
        "host": {
          "type": "string",
          "description": "Parameter host of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool",
          "default": ""
        },
        "os_name": {
          "type": "string",
          "description": "Parameter os_name of type str",
          "default": ""
        },
        "staging_environment": {
          "type": "string",
          "description": "Parameter staging_environment of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "vault_id": {
          "type": "string",
          "description": "Parameter vault_id of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str",
          "default": ""
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str"
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str"
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str"
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool"
        }
      },
      "required": [
        "azure_vault_secret_key",
        "cyberark_vault_query_string",
        "use_kerberos_authentication"
      ]
    }
  },
  {
    "name": "database_connectivity_check",
    "description": "POST /database/connectivity/check",
    "parameters": {
      "type": "object",
      "properties": {
        "credentials_type": {
          "type": "string",
          "description": "Parameter credentials_type of type str",
          "default": ""
        },
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "vault": {
          "type": "string",
          "description": "Parameter vault of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str",
          "default": ""
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str",
          "default": ""
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str",
          "default": ""
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        },
        "environment_user": {
          "type": "string",
          "description": "Parameter environment_user of type str"
        }
      },
      "required": [
        "environment_id",
        "environment_user"
      ]
    }
  },
  {
    "name": "netbackup_connectivity_check",
    "description": "POST /netbackup/connectivity/check",
    "parameters": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        },
        "master_server_name": {
          "type": "string",
          "description": "Parameter master_server_name of type str"
        },
        "source_client_name": {
          "type": "string",
          "description": "Parameter source_client_name of type str"
        }
      },
      "required": [
        "environment_id",
        "environment_user_id",
        "master_server_name",
        "source_client_name"
      ]
    }
  },
  {
    "name": "commvault_connectivity_check",
    "description": "POST /commvault/connectivity/check",
    "parameters": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        },
        "commserve_host_name": {
          "type": "string",
          "description": "Parameter commserve_host_name of type str"
        },
        "source_client_name": {
          "type": "string",
          "description": "Parameter source_client_name of type str"
        },
        "staging_client_name": {
          "type": "string",
          "description": "Parameter staging_client_name of type str"
        }
      },
      "required": [
        "environment_id",
        "environment_user_id",
        "commserve_host_name",
        "source_client_name",
        "staging_client_name"
      ]
    }
  },
  {
    "name": "get_data_layouts",
    "description": "GET /data-layouts",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_data_layouts",
    "description": "POST /data-layouts/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_data_layout_by_id",
    "description": "GET /data-layouts/{dataLayoutId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataLayoutId": {
          "type": "string",
          "description": "Parameter dataLayoutId of type str"
        }
      },
      "required": [
        "dataLayoutId"
      ]
    }
  },
  {
    "name": "get_data_layout_tags",
    "description": "GET /data-layouts/{dataLayoutId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataLayoutId": {
          "type": "string",
          "description": "Parameter dataLayoutId of type str"
        }
      },
      "required": [
        "dataLayoutId"
      ]
    }
  },
  {
    "name": "create_data_layout_tags",
    "description": "POST /data-layouts/{dataLayoutId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataLayoutId": {
          "type": "string",
          "description": "Parameter dataLayoutId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "dataLayoutId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_data_layout_tags",
    "description": "POST /data-layouts/{dataLayoutId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "dataLayoutId": {
          "type": "string",
          "description": "Parameter dataLayoutId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "convert_and_drop_bookmarks",
    "description": "POST /data-layouts/{dataLayoutId}/convert-and-drop",
    "parameters": {
      "type": "object",
      "properties": {
        "dataLayoutId": {
          "type": "string",
          "description": "Parameter dataLayoutId of type str"
        },
        "skip_account_import": {
          "type": "boolean",
          "description": "Parameter skip_account_import of type bool"
        }
      },
      "required": [
        "skip_account_import"
      ]
    }
  },
  {
    "name": "import_engine_accounts",
    "description": "POST /data-layouts/import-engine-accounts",
    "parameters": {
      "type": "object",
      "properties": {
        "data_layout_ids": {
          "type": "string",
          "description": "Parameter data_layout_ids of type str",
          "default": ""
        },
        "engine_ids": {
          "type": "string",
          "description": "Parameter engine_ids of type str",
          "default": ""
        },
        "import_all": {
          "type": "boolean",
          "description": "Parameter import_all of type bool"
        }
      },
      "required": []
    }
  },
  {
    "name": "get_bookmarks",
    "description": "GET /bookmarks",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_bookmark",
    "description": "POST /bookmarks",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "vdb_group_id": {
          "type": "string",
          "description": "Parameter vdb_group_id of type str",
          "default": ""
        },
        "snapshot_ids": {
          "type": "string",
          "description": "Parameter snapshot_ids of type str",
          "default": ""
        },
        "timeflow_ids": {
          "type": "string",
          "description": "Parameter timeflow_ids of type str",
          "default": ""
        },
        "timestamp": {
          "type": "string",
          "description": "Parameter timestamp of type str",
          "default": ""
        },
        "timestamp_in_database_timezone": {
          "type": "string",
          "description": "Parameter timestamp_in_database_timezone of type str",
          "default": ""
        },
        "location": {
          "type": "string",
          "description": "Parameter location of type str"
        },
        "retention": {
          "type": "integer",
          "description": "Parameter retention of type int",
          "default": ""
        },
        "expiration": {
          "type": "string",
          "description": "Parameter expiration of type str"
        },
        "retain_forever": {
          "type": "boolean",
          "description": "Parameter retain_forever of type bool",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        },
        "bookmark_type": {
          "type": "string",
          "description": "Parameter bookmark_type of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "inherit_parent_vdb_tags": {
          "type": "boolean",
          "description": "Parameter inherit_parent_vdb_tags of type bool"
        },
        "inherit_parent_tags": {
          "type": "boolean",
          "description": "Parameter inherit_parent_tags of type bool"
        }
      },
      "required": [
        "inherit_parent_tags"
      ]
    }
  },
  {
    "name": "search_bookmarks",
    "description": "POST /bookmarks/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_bookmark_by_id",
    "description": "GET /bookmarks/{bookmarkId}",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        }
      },
      "required": [
        "bookmarkId"
      ]
    }
  },
  {
    "name": "delete_bookmark",
    "description": "DELETE /bookmarks/{bookmarkId}",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        }
      },
      "required": [
        "bookmarkId"
      ]
    }
  },
  {
    "name": "update_bookmark",
    "description": "PATCH /bookmarks/{bookmarkId}",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "expiration": {
          "type": "string",
          "description": "Parameter expiration of type str"
        },
        "retain_forever": {
          "type": "boolean",
          "description": "Parameter retain_forever of type bool",
          "default": ""
        },
        "bookmark_type": {
          "type": "string",
          "description": "Parameter bookmark_type of type str"
        }
      },
      "required": [
        "bookmark_type"
      ]
    }
  },
  {
    "name": "get_vdb_groups_by_bookmark",
    "description": "GET /bookmarks/{bookmarkId}/vdb-groups",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_vdb_groups_by_bookmark",
    "description": "POST /bookmarks/{bookmarkId}/vdb-groups/search",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_bookmark_tags",
    "description": "GET /bookmarks/{bookmarkId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        }
      },
      "required": [
        "bookmarkId"
      ]
    }
  },
  {
    "name": "create_bookmark_tags",
    "description": "POST /bookmarks/{bookmarkId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "bookmarkId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_bookmark_tags",
    "description": "POST /bookmarks/{bookmarkId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmarkId": {
          "type": "string",
          "description": "Parameter bookmarkId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "import_engine_bookmarks",
    "description": "POST /bookmarks/import-engine-bookmarks/{engineId}",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "get_sources",
    "description": "GET /sources",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_oracle_source",
    "description": "POST /sources/oracle",
    "parameters": {
      "type": "object",
      "properties": {
        "oracle_config_type": {
          "type": "string",
          "description": "Parameter oracle_config_type of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        },
        "database_name": {
          "type": "string",
          "description": "Parameter database_name of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str",
          "default": ""
        },
        "unique_name": {
          "type": "string",
          "description": "Parameter unique_name of type str"
        },
        "instance_name": {
          "type": "string",
          "description": "Parameter instance_name of type str"
        }
      },
      "required": [
        "unique_name",
        "instance_name"
      ]
    }
  },
  {
    "name": "update_oracle_source_by_id",
    "description": "PATCH /sources/oracle/{sourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str",
          "default": ""
        },
        "user": {
          "type": "string",
          "description": "Parameter user of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str"
        },
        "linking_enabled": {
          "type": "boolean",
          "description": "Parameter linking_enabled of type bool"
        }
      },
      "required": [
        "linking_enabled"
      ]
    }
  },
  {
    "name": "verify_source_jdbc_connection_string",
    "description": "POST /sources/{sourceId}/jdbc-check",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        },
        "database_username": {
          "type": "string",
          "description": "Parameter database_username of type str"
        },
        "database_password": {
          "type": "string",
          "description": "Parameter database_password of type str"
        },
        "jdbc_connection_string": {
          "type": "string",
          "description": "Parameter jdbc_connection_string of type str"
        }
      },
      "required": [
        "sourceId",
        "database_username",
        "database_password",
        "jdbc_connection_string"
      ]
    }
  },
  {
    "name": "create_postgres_source",
    "description": "POST /sources/postgres",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        }
      },
      "required": [
        "environment_id"
      ]
    }
  },
  {
    "name": "create_app_data_source",
    "description": "POST /sources/appdata",
    "parameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Parameter type of type str"
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "linking_enabled": {
          "type": "boolean",
          "description": "Parameter linking_enabled of type bool",
          "default": ""
        },
        "environment_user": {
          "type": "string",
          "description": "Parameter environment_user of type str",
          "default": ""
        },
        "parameters": {
          "type": "string",
          "description": "Parameter parameters of type str",
          "default": ""
        },
        "path": {
          "type": "string",
          "description": "Parameter path of type str"
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "path",
        "environment_id",
        "engine_id"
      ]
    }
  },
  {
    "name": "update_postgres_source_by_id",
    "description": "PATCH /sources/postgres/{sourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "search_sources",
    "description": "POST /sources/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_source_by_id",
    "description": "GET /sources/{sourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        }
      },
      "required": [
        "sourceId"
      ]
    }
  },
  {
    "name": "delete_source",
    "description": "DELETE /sources/{sourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        }
      },
      "required": [
        "sourceId"
      ]
    }
  },
  {
    "name": "update_source_by_id",
    "description": "PATCH /sources/{sourceId}/update",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str"
        }
      },
      "required": [
        "oracle_services"
      ]
    }
  },
  {
    "name": "get_source_tags",
    "description": "GET /sources/{sourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        }
      },
      "required": [
        "sourceId"
      ]
    }
  },
  {
    "name": "create_source_tags",
    "description": "POST /sources/{sourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "sourceId",
        "tags"
      ]
    }
  },
  {
    "name": "get_source_compatible_repo",
    "description": "GET /sources/{sourceId}/staging_compatible_repositories",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str"
        }
      },
      "required": [
        "sourceId"
      ]
    }
  },
  {
    "name": "delete_source_tags",
    "description": "POST /sources/{sourceId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string",
          "description": "Parameter sourceId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_staging_sources",
    "description": "GET /staging-sources",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_staging_sources",
    "description": "POST /staging-sources/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_staging_source_by_id",
    "description": "GET /staging-sources/{stagingSourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "stagingSourceId": {
          "type": "string",
          "description": "Parameter stagingSourceId of type str"
        }
      },
      "required": [
        "stagingSourceId"
      ]
    }
  },
  {
    "name": "update_staging_source_by_id",
    "description": "PATCH /staging-sources/{stagingSourceId}/update",
    "parameters": {
      "type": "object",
      "properties": {
        "stagingSourceId": {
          "type": "string",
          "description": "Parameter stagingSourceId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str"
        }
      },
      "required": [
        "oracle_services"
      ]
    }
  },
  {
    "name": "get_staging_source_tags",
    "description": "GET /staging-sources/{stagingSourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "stagingSourceId": {
          "type": "string",
          "description": "Parameter stagingSourceId of type str"
        }
      },
      "required": [
        "stagingSourceId"
      ]
    }
  },
  {
    "name": "create_staging_source_tags",
    "description": "POST /staging-sources/{stagingSourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "stagingSourceId": {
          "type": "string",
          "description": "Parameter stagingSourceId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "stagingSourceId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_staging_source_tags",
    "description": "POST /staging-sources/{stagingSourceId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "stagingSourceId": {
          "type": "string",
          "description": "Parameter stagingSourceId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_dsources",
    "description": "GET /dsources",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "permission": {
          "type": "string",
          "description": "Parameter permission of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "link_oracle_database",
    "description": "POST /dsources/oracle",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_oracle_dsource_linking_defaults",
    "description": "POST /dsources/oracle/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str"
        }
      },
      "required": [
        "source_id"
      ]
    }
  },
  {
    "name": "detach_oracle_dsource",
    "description": "POST /dsources/oracle/{dsourceId}/detachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "attach_oracle_dsource",
    "description": "POST /dsources/oracle/{dsourceId}/attachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str"
        }
      },
      "required": [
        "dsourceId",
        "source_id"
      ]
    }
  },
  {
    "name": "link_oracle_staging_push_database",
    "description": "POST /dsources/oracle/staging-push",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_oracle_staging_push_dsource_linking_defaults",
    "description": "POST /dsources/oracle/staging-push/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        },
        "container_type": {
          "type": "string",
          "description": "Parameter container_type of type str"
        }
      },
      "required": [
        "container_type"
      ]
    }
  },
  {
    "name": "update_oracle_dsource_by_id",
    "description": "PATCH /dsources/oracle/{dsourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "db_username": {
          "type": "string",
          "description": "Parameter db_username of type str",
          "default": ""
        },
        "db_password": {
          "type": "string",
          "description": "Parameter db_password of type str"
        },
        "validate_db_credentials": {
          "type": "boolean",
          "description": "Parameter validate_db_credentials of type bool",
          "default": ""
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        },
        "backup_level_enabled": {
          "type": "boolean",
          "description": "Parameter backup_level_enabled of type bool"
        },
        "rman_channels": {
          "type": "integer",
          "description": "Parameter rman_channels of type int"
        },
        "files_per_set": {
          "type": "integer",
          "description": "Parameter files_per_set of type int"
        },
        "check_logical": {
          "type": "boolean",
          "description": "Parameter check_logical of type bool"
        },
        "encrypted_linking_enabled": {
          "type": "boolean",
          "description": "Parameter encrypted_linking_enabled of type bool"
        },
        "compressed_linking_enabled": {
          "type": "boolean",
          "description": "Parameter compressed_linking_enabled of type bool"
        },
        "bandwidth_limit": {
          "type": "integer",
          "description": "Parameter bandwidth_limit of type int"
        },
        "number_of_connections": {
          "type": "integer",
          "description": "Parameter number_of_connections of type int"
        },
        "validate_by_opening_db_in_read_only_mode": {
          "type": "boolean",
          "description": "Parameter validate_by_opening_db_in_read_only_mode of type bool"
        },
        "pre_provisioning_enabled": {
          "type": "boolean",
          "description": "Parameter pre_provisioning_enabled of type bool"
        },
        "diagnose_no_logging_faults": {
          "type": "boolean",
          "description": "Parameter diagnose_no_logging_faults of type bool"
        },
        "rac_max_instance_lag": {
          "type": "integer",
          "description": "Parameter rac_max_instance_lag of type int"
        },
        "allow_auto_staging_restart_on_host_reboot": {
          "type": "boolean",
          "description": "Parameter allow_auto_staging_restart_on_host_reboot of type bool"
        },
        "physical_standby": {
          "type": "boolean",
          "description": "Parameter physical_standby of type bool",
          "default": ""
        },
        "external_file_path": {
          "type": "string",
          "description": "Parameter external_file_path of type str",
          "default": ""
        },
        "hooks": {
          "type": "string",
          "description": "Parameter hooks of type str",
          "default": ""
        },
        "custom_env_variables_pairs": {
          "type": "string",
          "description": "Parameter custom_env_variables_pairs of type str",
          "default": ""
        },
        "custom_env_variables_paths": {
          "type": "string",
          "description": "Parameter custom_env_variables_paths of type str",
          "default": ""
        },
        "staging_database_config_params": {
          "type": "string",
          "description": "Parameter staging_database_config_params of type str",
          "default": ""
        },
        "template_id": {
          "type": "string",
          "description": "Parameter template_id of type str"
        },
        "logsync_enabled": {
          "type": "boolean",
          "description": "Parameter logsync_enabled of type bool",
          "default": ""
        },
        "logsync_mode": {
          "type": "string",
          "description": "Parameter logsync_mode of type str"
        },
        "logsync_interval": {
          "type": "integer",
          "description": "Parameter logsync_interval of type int"
        }
      },
      "required": [
        "logsync_interval"
      ]
    }
  },
  {
    "name": "upgrade_oracle_dsource",
    "description": "This API is marked as deprecated in favour of generalized API '/dsources/{dsourceId}/upgrade'",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        }
      },
      "required": [
        "dsourceId",
        "repository_id",
        "environment_user_id"
      ]
    }
  },
  {
    "name": "upgrade_dsource",
    "description": "POST /dsources/{dsourceId}/upgrade",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        },
        "ppt_repository": {
          "type": "string",
          "description": "Parameter ppt_repository of type str"
        }
      },
      "required": [
        "environment_user_id",
        "ppt_repository"
      ]
    }
  },
  {
    "name": "link_ase_database",
    "description": "POST /dsources/ase",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_ase_dsource_linking_defaults",
    "description": "POST /dsources/ase/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str"
        }
      },
      "required": [
        "source_id"
      ]
    }
  },
  {
    "name": "update_ase_dsource_by_id",
    "description": "PATCH /dsources/ase/{dsourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "sync_policy_id": {
          "type": "string",
          "description": "Parameter sync_policy_id of type str",
          "default": ""
        },
        "retention_policy_id": {
          "type": "string",
          "description": "Parameter retention_policy_id of type str"
        }
      },
      "required": [
        "retention_policy_id"
      ]
    }
  },
  {
    "name": "link_appdata_database",
    "description": "POST /dsources/appdata",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_appdata_dsource_linking_defaults",
    "description": "POST /dsources/appdata/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str"
        }
      },
      "required": [
        "source_id"
      ]
    }
  },
  {
    "name": "update_appdata_dsource_by_id",
    "description": "PATCH /dsources/appdata/{dsourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "staging_environment": {
          "type": "string",
          "description": "Parameter staging_environment of type str",
          "default": ""
        },
        "staging_environment_user": {
          "type": "string",
          "description": "Parameter staging_environment_user of type str",
          "default": ""
        },
        "environment_user": {
          "type": "string",
          "description": "Parameter environment_user of type str",
          "default": ""
        },
        "parameters": {
          "type": "string",
          "description": "Parameter parameters of type str",
          "default": ""
        },
        "sync_policy_id": {
          "type": "string",
          "description": "Parameter sync_policy_id of type str",
          "default": ""
        },
        "retention_policy_id": {
          "type": "string",
          "description": "Parameter retention_policy_id of type str",
          "default": ""
        },
        "ops_pre_sync": {
          "type": "string",
          "description": "Parameter ops_pre_sync of type str",
          "default": ""
        },
        "ops_post_sync": {
          "type": "string",
          "description": "Parameter ops_post_sync of type str"
        }
      },
      "required": [
        "ops_post_sync"
      ]
    }
  },
  {
    "name": "link_mssql_database",
    "description": "POST /dsources/mssql",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "detach_mssql_database",
    "description": "POST /dsources/mssql/{dsourceId}/detachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "attach_mssql_database",
    "description": "POST /dsources/mssql/{dsourceId}/attachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str",
          "default": ""
        },
        "ppt_repository": {
          "type": "string",
          "description": "Parameter ppt_repository of type str",
          "default": ""
        },
        "sync_strategy_managed_type": {
          "type": "string",
          "description": "Parameter sync_strategy_managed_type of type str",
          "default": ""
        },
        "mssql_user_environment_reference": {
          "type": "string",
          "description": "Parameter mssql_user_environment_reference of type str",
          "default": ""
        },
        "mssql_user_domain_username": {
          "type": "string",
          "description": "Parameter mssql_user_domain_username of type str",
          "default": ""
        },
        "mssql_user_domain_password": {
          "type": "string",
          "description": "Parameter mssql_user_domain_password of type str",
          "default": ""
        },
        "mssql_user_domain_vault_username": {
          "type": "string",
          "description": "Parameter mssql_user_domain_vault_username of type str",
          "default": ""
        },
        "mssql_user_domain_vault": {
          "type": "string",
          "description": "Parameter mssql_user_domain_vault of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_engine of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_username_key of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_name": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_name of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_username_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_username_key of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_secret_key of type str",
          "default": ""
        },
        "mssql_user_domain_cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter mssql_user_domain_cyberark_vault_query_string of type str"
        },
        "mssql_database_username": {
          "type": "string",
          "description": "Parameter mssql_database_username of type str",
          "default": ""
        },
        "mssql_database_password": {
          "type": "string",
          "description": "Parameter mssql_database_password of type str",
          "default": ""
        },
        "delphix_managed_backup_compression_enabled": {
          "type": "boolean",
          "description": "Parameter delphix_managed_backup_compression_enabled of type bool",
          "default": ""
        },
        "delphix_managed_backup_policy": {
          "type": "string",
          "description": "Parameter delphix_managed_backup_policy of type str",
          "default": ""
        },
        "external_managed_validate_sync_mode": {
          "type": "string",
          "description": "Parameter external_managed_validate_sync_mode of type str",
          "default": ""
        },
        "external_managed_shared_backup_locations": {
          "type": "string",
          "description": "Parameter external_managed_shared_backup_locations of type str",
          "default": ""
        },
        "external_netbackup_config_master_name": {
          "type": "string",
          "description": "Parameter external_netbackup_config_master_name of type str",
          "default": ""
        },
        "external_netbackup_config_source_client_name": {
          "type": "string",
          "description": "Parameter external_netbackup_config_source_client_name of type str",
          "default": ""
        },
        "external_netbackup_config_params": {
          "type": "string",
          "description": "Parameter external_netbackup_config_params of type str",
          "default": ""
        },
        "external_netbackup_config_templates": {
          "type": "string",
          "description": "Parameter external_netbackup_config_templates of type str",
          "default": ""
        },
        "external_commserve_host_name": {
          "type": "string",
          "description": "Parameter external_commserve_host_name of type str",
          "default": ""
        },
        "external_commvault_config_source_client_name": {
          "type": "string",
          "description": "Parameter external_commvault_config_source_client_name of type str",
          "default": ""
        },
        "external_commvault_config_staging_client_name": {
          "type": "string",
          "description": "Parameter external_commvault_config_staging_client_name of type str",
          "default": ""
        },
        "external_commvault_config_params": {
          "type": "string",
          "description": "Parameter external_commvault_config_params of type str",
          "default": ""
        },
        "external_commvault_config_templates": {
          "type": "string",
          "description": "Parameter external_commvault_config_templates of type str",
          "default": ""
        },
        "encryption_key": {
          "type": "string",
          "description": "Parameter encryption_key of type str",
          "default": ""
        },
        "source_host_user": {
          "type": "string",
          "description": "Parameter source_host_user of type str",
          "default": ""
        },
        "ppt_host_user": {
          "type": "string",
          "description": "Parameter ppt_host_user of type str",
          "default": ""
        },
        "staging_pre_script": {
          "type": "string",
          "description": "Parameter staging_pre_script of type str",
          "default": ""
        },
        "staging_post_script": {
          "type": "string",
          "description": "Parameter staging_post_script of type str"
        },
        "ops_pre_sync": {
          "type": "string",
          "description": "Parameter ops_pre_sync of type str"
        },
        "ops_post_sync": {
          "type": "string",
          "description": "Parameter ops_post_sync of type str"
        }
      },
      "required": [
        "staging_post_script",
        "ops_pre_sync",
        "ops_post_sync"
      ]
    }
  },
  {
    "name": "attach_mssql_staging_push_database",
    "description": "POST /dsources/mssql/staging-push/{dsourceId}/attachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "ppt_repository": {
          "type": "string",
          "description": "Parameter ppt_repository of type str",
          "default": ""
        },
        "staging_database_name": {
          "type": "string",
          "description": "Parameter staging_database_name of type str",
          "default": ""
        },
        "encryption_key": {
          "type": "string",
          "description": "Parameter encryption_key of type str",
          "default": ""
        },
        "ppt_host_user": {
          "type": "string",
          "description": "Parameter ppt_host_user of type str",
          "default": ""
        },
        "staging_pre_script": {
          "type": "string",
          "description": "Parameter staging_pre_script of type str",
          "default": ""
        },
        "staging_post_script": {
          "type": "string",
          "description": "Parameter staging_post_script of type str",
          "default": ""
        },
        "db_state": {
          "type": "string",
          "description": "Parameter db_state of type str"
        },
        "ops_pre_sync": {
          "type": "string",
          "description": "Parameter ops_pre_sync of type str"
        },
        "ops_post_sync": {
          "type": "string",
          "description": "Parameter ops_post_sync of type str"
        }
      },
      "required": [
        "db_state",
        "ops_pre_sync",
        "ops_post_sync"
      ]
    }
  },
  {
    "name": "get_mssql_dsource_linking_defaults",
    "description": "POST /dsources/mssql/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_id": {
          "type": "string",
          "description": "Parameter source_id of type str"
        }
      },
      "required": [
        "source_id"
      ]
    }
  },
  {
    "name": "link_mssql_staging_push_database",
    "description": "POST /dsources/mssql/staging-push",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_mssql_staging_push_dsource_linking_defaults",
    "description": "POST /dsources/mssql/staging-push/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        }
      },
      "required": [
        "environment_id"
      ]
    }
  },
  {
    "name": "delete_dsource",
    "description": "POST /dsources/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "dsource_id": {
          "type": "string",
          "description": "Parameter dsource_id of type str"
        },
        "force": {
          "type": "boolean",
          "description": "Parameter force of type bool",
          "default": ""
        },
        "oracle_username": {
          "type": "string",
          "description": "Parameter oracle_username of type str",
          "default": ""
        },
        "oracle_password": {
          "type": "string",
          "description": "Parameter oracle_password of type str"
        },
        "delete_all_dependent_vdbs": {
          "type": "boolean",
          "description": "Parameter delete_all_dependent_vdbs of type bool"
        }
      },
      "required": [
        "delete_all_dependent_vdbs"
      ]
    }
  },
  {
    "name": "search_dsources",
    "description": "POST /dsources/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "permission": {
          "type": "string",
          "description": "Parameter permission of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_dsource_by_id",
    "description": "GET /dsources/{dsourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "enable_dsource",
    "description": "POST /dsources/{dsourceId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "attempt_start": {
          "type": "boolean",
          "description": "Parameter attempt_start of type bool"
        }
      },
      "required": [
        "attempt_start"
      ]
    }
  },
  {
    "name": "disable_dsource",
    "description": "POST /dsources/{dsourceId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "attempt_cleanup": {
          "type": "boolean",
          "description": "Parameter attempt_cleanup of type bool"
        }
      },
      "required": [
        "attempt_cleanup"
      ]
    }
  },
  {
    "name": "get_upgrade_compatible_repo_for_dsource",
    "description": "GET /dsources/{dsourceId}/upgrade_compatible_repositories",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "update_mssql_dsource_by_id",
    "description": "PATCH /dsources/mssql/{dsourceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "logsync_enabled": {
          "type": "boolean",
          "description": "Parameter logsync_enabled of type bool",
          "default": ""
        },
        "encryption_key": {
          "type": "string",
          "description": "Parameter encryption_key of type str",
          "default": ""
        },
        "ppt_repository": {
          "type": "string",
          "description": "Parameter ppt_repository of type str",
          "default": ""
        },
        "ppt_host_user": {
          "type": "string",
          "description": "Parameter ppt_host_user of type str",
          "default": ""
        },
        "sync_strategy_managed_type": {
          "type": "string",
          "description": "Parameter sync_strategy_managed_type of type str",
          "default": ""
        },
        "source_host_user": {
          "type": "string",
          "description": "Parameter source_host_user of type str",
          "default": ""
        },
        "mssql_user_environment_reference": {
          "type": "string",
          "description": "Parameter mssql_user_environment_reference of type str",
          "default": ""
        },
        "mssql_user_domain_username": {
          "type": "string",
          "description": "Parameter mssql_user_domain_username of type str",
          "default": ""
        },
        "mssql_user_domain_password": {
          "type": "string",
          "description": "Parameter mssql_user_domain_password of type str",
          "default": ""
        },
        "mssql_user_domain_vault_username": {
          "type": "string",
          "description": "Parameter mssql_user_domain_vault_username of type str",
          "default": ""
        },
        "mssql_user_domain_vault": {
          "type": "string",
          "description": "Parameter mssql_user_domain_vault of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_engine of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_username_key of type str",
          "default": ""
        },
        "mssql_user_domain_hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_name": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_name of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_username_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_username_key of type str",
          "default": ""
        },
        "mssql_user_domain_azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter mssql_user_domain_azure_vault_secret_key of type str",
          "default": ""
        },
        "mssql_user_domain_cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter mssql_user_domain_cyberark_vault_query_string of type str",
          "default": ""
        },
        "mssql_database_username": {
          "type": "string",
          "description": "Parameter mssql_database_username of type str",
          "default": ""
        },
        "mssql_database_password": {
          "type": "string",
          "description": "Parameter mssql_database_password of type str"
        },
        "delphix_managed_backup_compression_enabled": {
          "type": "boolean",
          "description": "Parameter delphix_managed_backup_compression_enabled of type bool",
          "default": ""
        },
        "delphix_managed_backup_policy": {
          "type": "string",
          "description": "Parameter delphix_managed_backup_policy of type str",
          "default": ""
        },
        "external_managed_validate_sync_mode": {
          "type": "string",
          "description": "Parameter external_managed_validate_sync_mode of type str",
          "default": ""
        },
        "external_managed_shared_backup_locations": {
          "type": "string",
          "description": "Parameter external_managed_shared_backup_locations of type str"
        },
        "disable_netbackup_config": {
          "type": "boolean",
          "description": "Parameter disable_netbackup_config of type bool",
          "default": ""
        },
        "external_netbackup_config_master_name": {
          "type": "string",
          "description": "Parameter external_netbackup_config_master_name of type str",
          "default": ""
        },
        "external_netbackup_config_source_client_name": {
          "type": "string",
          "description": "Parameter external_netbackup_config_source_client_name of type str",
          "default": ""
        },
        "external_netbackup_config_params": {
          "type": "string",
          "description": "Parameter external_netbackup_config_params of type str",
          "default": ""
        },
        "external_netbackup_config_templates": {
          "type": "string",
          "description": "Parameter external_netbackup_config_templates of type str"
        },
        "disable_commvault_config": {
          "type": "boolean",
          "description": "Parameter disable_commvault_config of type bool",
          "default": ""
        },
        "external_commserve_host_name": {
          "type": "string",
          "description": "Parameter external_commserve_host_name of type str",
          "default": ""
        },
        "external_commvault_config_source_client_name": {
          "type": "string",
          "description": "Parameter external_commvault_config_source_client_name of type str",
          "default": ""
        },
        "external_commvault_config_staging_client_name": {
          "type": "string",
          "description": "Parameter external_commvault_config_staging_client_name of type str",
          "default": ""
        },
        "external_commvault_config_params": {
          "type": "string",
          "description": "Parameter external_commvault_config_params of type str",
          "default": ""
        },
        "external_commvault_config_templates": {
          "type": "string",
          "description": "Parameter external_commvault_config_templates of type str",
          "default": ""
        },
        "hooks": {
          "type": "string",
          "description": "Parameter hooks of type str",
          "default": ""
        },
        "sync_policy_id": {
          "type": "string",
          "description": "Parameter sync_policy_id of type str",
          "default": ""
        },
        "retention_policy_id": {
          "type": "string",
          "description": "Parameter retention_policy_id of type str"
        }
      },
      "required": [
        "retention_policy_id"
      ]
    }
  },
  {
    "name": "get_dsource_snapshots",
    "description": "GET /dsources/{dsourceId}/snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str"
        }
      },
      "required": [
        "cursor"
      ]
    }
  },
  {
    "name": "snapshot_dsource",
    "description": "POST /dsources/{dsourceId}/snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "drop_and_recreate_devices": {
          "type": "boolean",
          "description": "Parameter drop_and_recreate_devices of type bool",
          "default": ""
        },
        "sync_strategy": {
          "type": "string",
          "description": "Parameter sync_strategy of type str",
          "default": ""
        },
        "ase_backup_files": {
          "type": "string",
          "description": "Parameter ase_backup_files of type str",
          "default": ""
        },
        "mssql_backup_uuid": {
          "type": "string",
          "description": "Parameter mssql_backup_uuid of type str"
        },
        "compression_enabled": {
          "type": "boolean",
          "description": "Parameter compression_enabled of type bool",
          "default": ""
        },
        "availability_group_backup_policy": {
          "type": "string",
          "description": "Parameter availability_group_backup_policy of type str"
        },
        "do_not_resume": {
          "type": "boolean",
          "description": "Parameter do_not_resume of type bool"
        },
        "double_sync": {
          "type": "boolean",
          "description": "Parameter double_sync of type bool"
        },
        "force_full_backup": {
          "type": "boolean",
          "description": "Parameter force_full_backup of type bool"
        },
        "skip_space_check": {
          "type": "boolean",
          "description": "Parameter skip_space_check of type bool",
          "default": ""
        },
        "files_for_partial_full_backup": {
          "type": "string",
          "description": "Parameter files_for_partial_full_backup of type str",
          "default": ""
        },
        "appdata_parameters": {
          "type": "string",
          "description": "Parameter appdata_parameters of type str"
        },
        "rman_rate_in_MB": {
          "type": "integer",
          "description": "Parameter rman_rate_in_MB of type int"
        }
      },
      "required": [
        "rman_rate_in_MB"
      ]
    }
  },
  {
    "name": "get_dsource_deletion_dependencies",
    "description": "GET /dsources/{dsourceId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "get_tags_dsource",
    "description": "GET /dsources/{dsourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "create_tags_dsource",
    "description": "POST /dsources/{dsourceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "dsourceId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_tags_dsource",
    "description": "POST /dsources/{dsourceId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "export_dsource_to_asm_by_snapshot",
    "description": "POST /dsources/{dsourceId}/asm-export-by-snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_by_snapshot",
    "description": "POST /dsources/{dsourceId}/export-by-snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_to_asm_by_location",
    "description": "POST /dsources/{dsourceId}/asm-export-by-location",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_to_asm_by_bookmark",
    "description": "POST /dsources/{dsourceId}/asm-export-from-bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_from_bookmark",
    "description": "POST /dsources/{dsourceId}/export-from-bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_to_asm_by_timestamp",
    "description": "POST /dsources/{dsourceId}/asm-export-by-timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_by_timestamp",
    "description": "POST /dsources/{dsourceId}/export-by-timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "export_dsource_by_location",
    "description": "POST /dsources/{dsourceId}/export-by-location",
    "parameters": {
      "type": "object",
      "properties": {
        "dsourceId": {
          "type": "string",
          "description": "Parameter dsourceId of type str"
        }
      },
      "required": [
        "dsourceId"
      ]
    }
  },
  {
    "name": "get_kerberos_config_by_id",
    "description": "GET /kerberos-configs/{kerberosConfigId}",
    "parameters": {
      "type": "object",
      "properties": {
        "kerberosConfigId": {
          "type": "string",
          "description": "Parameter kerberosConfigId of type str"
        }
      },
      "required": [
        "kerberosConfigId"
      ]
    }
  },
  {
    "name": "list_kerberos_configs",
    "description": "GET /kerberos-configs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_kerberos_configs",
    "description": "POST /kerberos-configs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_password_vaults",
    "description": "GET /password_vaults",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_password_vaults",
    "description": "POST /password_vaults/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_password_vault_by_id",
    "description": "GET /password_vaults/{passwordVaultId}",
    "parameters": {
      "type": "object",
      "properties": {
        "passwordVaultId": {
          "type": "string",
          "description": "Parameter passwordVaultId of type str"
        }
      },
      "required": [
        "passwordVaultId"
      ]
    }
  },
  {
    "name": "get_dataset_groups",
    "description": "GET /groups",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_dataset_groups",
    "description": "POST /groups/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_dataset_group_by_id",
    "description": "GET /groups/{groupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Parameter groupId of type str"
        }
      },
      "required": [
        "groupId"
      ]
    }
  },
  {
    "name": "get_toolkits",
    "description": "GET /toolkits",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_toolkits",
    "description": "POST /toolkits/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_toolkit_by_id",
    "description": "GET /toolkits/{toolkitId}",
    "parameters": {
      "type": "object",
      "properties": {
        "toolkitId": {
          "type": "string",
          "description": "Parameter toolkitId of type str"
        }
      },
      "required": [
        "toolkitId"
      ]
    }
  },
  {
    "name": "get_toolkit_tags",
    "description": "GET /toolkits/{toolkitId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "toolkitId": {
          "type": "string",
          "description": "Parameter toolkitId of type str"
        }
      },
      "required": [
        "toolkitId"
      ]
    }
  },
  {
    "name": "create_toolkit_tags",
    "description": "POST /toolkits/{toolkitId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "toolkitId": {
          "type": "string",
          "description": "Parameter toolkitId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "toolkitId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_toolkit_tags",
    "description": "POST /toolkits/{toolkitId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "toolkitId": {
          "type": "string",
          "description": "Parameter toolkitId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_vdbs",
    "description": "GET /vdbs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "permission": {
          "type": "string",
          "description": "Parameter permission of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_vdbs",
    "description": "POST /vdbs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "permission": {
          "type": "string",
          "description": "Parameter permission of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_vdb_by_id",
    "description": "GET /vdbs/{vdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "update_vdb_by_id",
    "description": "PATCH /vdbs/{vdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "db_username": {
          "type": "string",
          "description": "Parameter db_username of type str",
          "default": ""
        },
        "db_password": {
          "type": "string",
          "description": "Parameter db_password of type str"
        },
        "validate_db_credentials": {
          "type": "boolean",
          "description": "Parameter validate_db_credentials of type bool"
        },
        "auto_restart": {
          "type": "boolean",
          "description": "Parameter auto_restart of type bool",
          "default": ""
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str",
          "default": ""
        },
        "template_id": {
          "type": "string",
          "description": "Parameter template_id of type str",
          "default": ""
        },
        "listener_ids": {
          "type": "string",
          "description": "Parameter listener_ids of type str"
        },
        "new_dbid": {
          "type": "boolean",
          "description": "Parameter new_dbid of type bool"
        },
        "cdc_on_provision": {
          "type": "boolean",
          "description": "Parameter cdc_on_provision of type bool",
          "default": ""
        },
        "pre_script": {
          "type": "string",
          "description": "Parameter pre_script of type str",
          "default": ""
        },
        "post_script": {
          "type": "string",
          "description": "Parameter post_script of type str",
          "default": ""
        },
        "hooks": {
          "type": "string",
          "description": "Parameter hooks of type str",
          "default": ""
        },
        "custom_env_vars": {
          "type": "string",
          "description": "Parameter custom_env_vars of type str",
          "default": ""
        },
        "custom_env_files": {
          "type": "string",
          "description": "Parameter custom_env_files of type str",
          "default": ""
        },
        "oracle_rac_custom_env_files": {
          "type": "string",
          "description": "Parameter oracle_rac_custom_env_files of type str",
          "default": ""
        },
        "oracle_rac_custom_env_vars": {
          "type": "string",
          "description": "Parameter oracle_rac_custom_env_vars of type str",
          "default": ""
        },
        "parent_tde_keystore_path": {
          "type": "string",
          "description": "Parameter parent_tde_keystore_path of type str",
          "default": ""
        },
        "parent_tde_keystore_password": {
          "type": "string",
          "description": "Parameter parent_tde_keystore_password of type str",
          "default": ""
        },
        "tde_key_identifier": {
          "type": "string",
          "description": "Parameter tde_key_identifier of type str",
          "default": ""
        },
        "target_vcdb_tde_keystore_path": {
          "type": "string",
          "description": "Parameter target_vcdb_tde_keystore_path of type str",
          "default": ""
        },
        "cdb_tde_keystore_password": {
          "type": "string",
          "description": "Parameter cdb_tde_keystore_password of type str",
          "default": ""
        },
        "appdata_source_params": {
          "type": "string",
          "description": "Parameter appdata_source_params of type str",
          "default": ""
        },
        "additional_mount_points": {
          "type": "string",
          "description": "Parameter additional_mount_points of type str",
          "default": ""
        },
        "appdata_config_params": {
          "type": "string",
          "description": "Parameter appdata_config_params of type str",
          "default": ""
        },
        "config_params": {
          "type": "string",
          "description": "Parameter config_params of type str",
          "default": ""
        },
        "mount_point": {
          "type": "string",
          "description": "Parameter mount_point of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str"
        },
        "invoke_datapatch": {
          "type": "boolean",
          "description": "Parameter invoke_datapatch of type bool",
          "default": ""
        },
        "mssql_ag_backup_location": {
          "type": "string",
          "description": "Parameter mssql_ag_backup_location of type str"
        },
        "mssql_ag_backup_based": {
          "type": "boolean",
          "description": "Parameter mssql_ag_backup_based of type bool"
        }
      },
      "required": [
        "mssql_ag_backup_based"
      ]
    }
  },
  {
    "name": "get_vdb_snapshots",
    "description": "GET /vdbs/{vdbId}/snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str"
        }
      },
      "required": [
        "cursor"
      ]
    }
  },
  {
    "name": "snapshot_vdb",
    "description": "POST /vdbs/{vdbId}/snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "get_bookmarks_by_vdb",
    "description": "GET /vdbs/{vdbId}/bookmarks",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_bookmarks_by_vdb",
    "description": "POST /vdbs/{vdbId}/bookmarks/search",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_vdb_deletion_dependencies",
    "description": "GET /vdbs/{vdbId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "get_tags_vdb",
    "description": "GET /vdbs/{vdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "create_vdb_tags",
    "description": "POST /vdbs/{vdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "vdbId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_vdb_tags",
    "description": "POST /vdbs/{vdbId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "start_vdb",
    "description": "POST /vdbs/{vdbId}/start",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str"
        }
      },
      "required": [
        "instances"
      ]
    }
  },
  {
    "name": "stop_vdb",
    "description": "POST /vdbs/{vdbId}/stop",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str"
        },
        "abort": {
          "type": "boolean",
          "description": "Parameter abort of type bool"
        }
      },
      "required": [
        "abort"
      ]
    }
  },
  {
    "name": "enable_vdb",
    "description": "POST /vdbs/{vdbId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "attempt_start": {
          "type": "boolean",
          "description": "Parameter attempt_start of type bool"
        },
        "container_mode": {
          "type": "boolean",
          "description": "Parameter container_mode of type bool",
          "default": ""
        },
        "ownership_spec": {
          "type": "string",
          "description": "Parameter ownership_spec of type str"
        }
      },
      "required": [
        "ownership_spec"
      ]
    }
  },
  {
    "name": "disable_vdb",
    "description": "POST /vdbs/{vdbId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "attempt_cleanup": {
          "type": "boolean",
          "description": "Parameter attempt_cleanup of type bool"
        },
        "container_mode": {
          "type": "boolean",
          "description": "Parameter container_mode of type bool"
        }
      },
      "required": [
        "container_mode"
      ]
    }
  },
  {
    "name": "migrate_vdb",
    "description": "POST /vdbs/{vdbId}/migrate",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        },
        "environment_user_ref": {
          "type": "string",
          "description": "Parameter environment_user_ref of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "cdb_id": {
          "type": "string",
          "description": "Parameter cdb_id of type str"
        }
      },
      "required": [
        "cdb_id"
      ]
    }
  },
  {
    "name": "get_migrate_compatible_repo",
    "description": "GET /vdbs/{vdbId}/migrate_compatible_repositories",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "lock_vdb",
    "description": "POST /vdbs/{vdbId}/lock",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "account_id": {
          "type": "integer",
          "description": "Parameter account_id of type int"
        }
      },
      "required": [
        "account_id"
      ]
    }
  },
  {
    "name": "unlock_vdb",
    "description": "POST /vdbs/{vdbId}/unlock",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "delete_vdb",
    "description": "POST /vdbs/{vdbId}/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "force": {
          "type": "boolean",
          "description": "Parameter force of type bool"
        },
        "delete_all_dependent_vdbs": {
          "type": "boolean",
          "description": "Parameter delete_all_dependent_vdbs of type bool"
        }
      },
      "required": [
        "delete_all_dependent_vdbs"
      ]
    }
  },
  {
    "name": "rollback_vdb_by_timestamp",
    "description": "POST /vdbs/{vdbId}/rollback_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "rollback_vdb_by_snapshot",
    "description": "POST /vdbs/{vdbId}/rollback_by_snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "rollback_vdb_from_bookmark",
    "description": "POST /vdbs/{vdbId}/rollback_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "refresh_vdb_by_timestamp",
    "description": "POST /vdbs/{vdbId}/refresh_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "refresh_vdb_by_snapshot",
    "description": "POST /vdbs/{vdbId}/refresh_by_snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "refresh_vdb_from_bookmark",
    "description": "POST /vdbs/{vdbId}/refresh_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "refresh_vdb_by_location",
    "description": "POST /vdbs/{vdbId}/refresh_by_location",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "location": {
          "type": "string",
          "description": "Parameter location of type str",
          "default": ""
        },
        "dataset_id": {
          "type": "string",
          "description": "Parameter dataset_id of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str"
        }
      },
      "required": [
        "timeflow_id"
      ]
    }
  },
  {
    "name": "undo_refresh",
    "description": "POST /vdbs/{vdbId}/undo_refresh",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "switch_timeflow",
    "description": "POST /vdbs/{vdbId}/switch_timeflow",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str"
        }
      },
      "required": [
        "timeflow_id"
      ]
    }
  },
  {
    "name": "upgrade_oracle_vdb",
    "description": "This API is marked as deprecated in favour of generalized API '/vdbs/{vdbId}/upgrade'",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        }
      },
      "required": [
        "vdbId",
        "repository_id",
        "environment_user_id"
      ]
    }
  },
  {
    "name": "upgrade_vdb",
    "description": "POST /vdbs/{vdbId}/upgrade",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str",
          "default": ""
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str",
          "default": ""
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        },
        "ppt_repository": {
          "type": "string",
          "description": "Parameter ppt_repository of type str"
        }
      },
      "required": [
        "environment_user_id",
        "ppt_repository"
      ]
    }
  },
  {
    "name": "get_upgrade_compatible_repo_for_vdb",
    "description": "GET /vdbs/{vdbId}/upgrade_compatible_repositories",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "verify_vdb_jdbc_connection_string",
    "description": "POST /vdbs/{vdbId}/jdbc-check",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        },
        "database_username": {
          "type": "string",
          "description": "Parameter database_username of type str"
        },
        "database_password": {
          "type": "string",
          "description": "Parameter database_password of type str"
        },
        "jdbc_connection_string": {
          "type": "string",
          "description": "Parameter jdbc_connection_string of type str"
        }
      },
      "required": [
        "vdbId",
        "database_username",
        "database_password",
        "jdbc_connection_string"
      ]
    }
  },
  {
    "name": "provision_vdb_by_timestamp",
    "description": "POST /vdbs/provision_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "provision_vdb_by_timestamp_defaults",
    "description": "POST /vdbs/provision_by_timestamp/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        },
        "timestamp": {
          "type": "string",
          "description": "Parameter timestamp of type str",
          "default": ""
        },
        "timestamp_in_database_timezone": {
          "type": "string",
          "description": "Parameter timestamp_in_database_timezone of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str"
        }
      },
      "required": [
        "timeflow_id"
      ]
    }
  },
  {
    "name": "provision_vdb_by_location",
    "description": "POST /vdbs/provision_by_location",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "provision_vdb_by_location_defaults",
    "description": "POST /vdbs/provision_by_location/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "location": {
          "type": "string",
          "description": "Parameter location of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "provision_vdb_by_snapshot",
    "description": "POST /vdbs/provision_by_snapshot",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "provision_vdb_by_snapshot_defaults",
    "description": "POST /vdbs/provision_by_snapshot/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshot_id": {
          "type": "string",
          "description": "Parameter snapshot_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "provision_vdb_from_bookmark",
    "description": "POST /vdbs/provision_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "provision_vdb_from_bookmark_defaults",
    "description": "POST /vdbs/provision_from_bookmark/defaults",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str"
        }
      },
      "required": [
        "bookmark_id"
      ]
    }
  },
  {
    "name": "oracle_asm_in_place_vdb_export",
    "description": "POST /vdbs/{vdbId}/asm-in-place-export",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_in_place",
    "description": "POST /vdbs/{vdbId}/in-place-export",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_to_asm_by_snapshot",
    "description": "POST /vdbs/{vdbId}/asm-export-by-snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_to_asm_by_location",
    "description": "POST /vdbs/{vdbId}/asm-export-by-location",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_to_asm_by_timestamp",
    "description": "POST /vdbs/{vdbId}/asm-export-by-timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_from_bookmark",
    "description": "POST /vdbs/{vdbId}/export-from-bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_to_asm_by_bookmark",
    "description": "POST /vdbs/{vdbId}/asm-export-from-bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_by_timestamp",
    "description": "POST /vdbs/{vdbId}/export-by-timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_by_snapshot",
    "description": "POST /vdbs/{vdbId}/export-by-snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "export_vdb_by_location",
    "description": "POST /vdbs/{vdbId}/export-by-location",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbId": {
          "type": "string",
          "description": "Parameter vdbId of type str"
        }
      },
      "required": [
        "vdbId"
      ]
    }
  },
  {
    "name": "get_vdb_groups",
    "description": "GET /vdb-groups",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_vdb_group",
    "description": "POST /vdb-groups",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "vdbs": {
          "type": "string",
          "description": "Parameter vdbs of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "refresh_immediately": {
          "type": "boolean",
          "description": "Parameter refresh_immediately of type bool"
        }
      },
      "required": [
        "refresh_immediately"
      ]
    }
  },
  {
    "name": "provision_vdb_group_from_bookmark",
    "description": "POST /vdb-groups/provision_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str"
        },
        "provision_parameters": {
          "type": "string",
          "description": "Parameter provision_parameters of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "provision_parameters",
        "tags",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "search_vdb_groups",
    "description": "POST /vdb-groups/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_vdb_group",
    "description": "GET /vdb-groups/{vdbGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        }
      },
      "required": [
        "vdbGroupId"
      ]
    }
  },
  {
    "name": "delete_vdb_group",
    "description": "DELETE /vdb-groups/{vdbGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        }
      },
      "required": [
        "vdbGroupId"
      ]
    }
  },
  {
    "name": "update_vdb_group_by_id",
    "description": "PATCH /vdb-groups/{vdbGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "vdbs": {
          "type": "string",
          "description": "Parameter vdbs of type str"
        },
        "refresh_immediately": {
          "type": "boolean",
          "description": "Parameter refresh_immediately of type bool"
        }
      },
      "required": [
        "refresh_immediately"
      ]
    }
  },
  {
    "name": "get_vdb_group_vdbs_latest_snapshots",
    "description": "GET /vdb-groups/{vdbGroupId}/latest-snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        }
      },
      "required": [
        "vdbGroupId"
      ]
    }
  },
  {
    "name": "get_vdb_group_timestamp_summary",
    "description": "POST /vdb-groups/{vdbGroupId}/timestamp-summary",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "timestamp": {
          "type": "string",
          "description": "Parameter timestamp of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "mode": {
          "type": "string",
          "description": "Parameter mode of type str"
        }
      },
      "required": [
        "mode"
      ]
    }
  },
  {
    "name": "get_vdb_group_tags",
    "description": "GET /vdb-groups/{vdbGroupId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        }
      },
      "required": [
        "vdbGroupId"
      ]
    }
  },
  {
    "name": "create_vdb_groups_tags",
    "description": "POST /vdb-groups/{vdbGroupId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "vdbGroupId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_vdb_group_tags",
    "description": "POST /vdb-groups/{vdbGroupId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "refresh_vdb_group",
    "description": "This API is marked as deprecated in favour of renamed API '/vdb-groups/{vdbGroupId}/refresh_from_bookmark'",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str"
        }
      },
      "required": [
        "vdbGroupId",
        "bookmark_id"
      ]
    }
  },
  {
    "name": "refresh_vdb_group_from_bookmark",
    "description": "POST /vdb-groups/{vdbGroupId}/refresh_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str"
        }
      },
      "required": [
        "vdbGroupId",
        "bookmark_id"
      ]
    }
  },
  {
    "name": "refresh_vdb_group_by_snapshot",
    "description": "POST /vdb-groups/{vdbGroupId}/refresh_by_snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_snapshot_mappings": {
          "type": "string",
          "description": "Parameter vdb_snapshot_mappings of type str"
        }
      },
      "required": [
        "vdb_snapshot_mappings"
      ]
    }
  },
  {
    "name": "refresh_vdb_group_by_timestamp",
    "description": "POST /vdb-groups/{vdbGroupId}/refresh_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_timestamp_mappings": {
          "type": "string",
          "description": "Parameter vdb_timestamp_mappings of type str"
        },
        "is_refresh_to_nearest": {
          "type": "boolean",
          "description": "Parameter is_refresh_to_nearest of type bool"
        }
      },
      "required": [
        "is_refresh_to_nearest"
      ]
    }
  },
  {
    "name": "rollback_vdb_group",
    "description": "This API is marked as deprecated in favour of API '/vdb-groups/{vdbGroupId}/refresh_from_bookmark'",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str"
        }
      },
      "required": [
        "vdbGroupId",
        "bookmark_id"
      ]
    }
  },
  {
    "name": "get_bookmarks_by_vdb_group",
    "description": "GET /vdb-groups/{vdbGroupId}/bookmarks",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_bookmarks_by_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/bookmarks/search",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "lock_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/lock",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        },
        "account_id": {
          "type": "integer",
          "description": "Parameter account_id of type int"
        }
      },
      "required": [
        "account_id"
      ]
    }
  },
  {
    "name": "unlock_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/unlock",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str"
        }
      },
      "required": [
        "vdbGroupId"
      ]
    }
  },
  {
    "name": "start_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/start",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_start_param_mappings": {
          "type": "string",
          "description": "Parameter vdb_start_param_mappings of type str"
        }
      },
      "required": [
        "vdb_start_param_mappings"
      ]
    }
  },
  {
    "name": "stop_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/stop",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_stop_param_mappings": {
          "type": "string",
          "description": "Parameter vdb_stop_param_mappings of type str"
        }
      },
      "required": [
        "vdb_stop_param_mappings"
      ]
    }
  },
  {
    "name": "enable_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_enable_param_mappings": {
          "type": "string",
          "description": "Parameter vdb_enable_param_mappings of type str"
        }
      },
      "required": [
        "vdb_enable_param_mappings"
      ]
    }
  },
  {
    "name": "disable_vdb_group",
    "description": "POST /vdb-groups/{vdbGroupId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "vdbGroupId": {
          "type": "string",
          "description": "Parameter vdbGroupId of type str",
          "default": ""
        },
        "vdb_disable_param_mappings": {
          "type": "string",
          "description": "Parameter vdb_disable_param_mappings of type str"
        }
      },
      "required": [
        "vdb_disable_param_mappings"
      ]
    }
  },
  {
    "name": "get_snapshots",
    "description": "GET /snapshots",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_snapshot_by_id",
    "description": "GET /snapshots/{snapshotId}",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "delete_snapshot",
    "description": "DELETE /snapshots/{snapshotId}",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "update_snapshot",
    "description": "PATCH /snapshots/{snapshotId}",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str",
          "default": ""
        },
        "expiration": {
          "type": "string",
          "description": "Parameter expiration of type str"
        },
        "retain_forever": {
          "type": "boolean",
          "description": "Parameter retain_forever of type bool"
        }
      },
      "required": [
        "retain_forever"
      ]
    }
  },
  {
    "name": "delete_snapshot_by_id",
    "description": "POST /snapshots/{snapshotId}/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        },
        "delete_all_dependencies": {
          "type": "boolean",
          "description": "Parameter delete_all_dependencies of type bool"
        }
      },
      "required": [
        "delete_all_dependencies"
      ]
    }
  },
  {
    "name": "unset_snapshot_retention",
    "description": "POST /snapshots/{snapshotId}/unset_expiration",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "get_snapshot_tags",
    "description": "GET /snapshots/{snapshotId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "create_snapshot_tags",
    "description": "POST /snapshots/{snapshotId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "snapshotId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_snapshot_tags",
    "description": "POST /snapshots/{snapshotId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_snapshots",
    "description": "POST /snapshots/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "find_by_location",
    "description": "GET /snapshots/find_by_location",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "find_by_timestamp",
    "description": "GET /snapshots/find_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_snapshot_timeflow_range",
    "description": "GET /snapshots/{snapshotId}/timeflow_range",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "get_snapshot_runtime_by_id",
    "description": "GET /snapshots/{snapshotId}/runtime",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "get_snapshots_capacity_data",
    "description": "GET /snapshots/capacity",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_shared_snapshot_space",
    "description": "GET /snapshots/shared-space",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_snapshot_deletion_dependencies",
    "description": "GET /snapshots/{snapshotId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Parameter snapshotId of type str"
        }
      },
      "required": [
        "snapshotId"
      ]
    }
  },
  {
    "name": "get_timeflows",
    "description": "GET /timeflows",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_timeflow_by_id",
    "description": "GET /timeflows/{timeflowId}",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        }
      },
      "required": [
        "timeflowId"
      ]
    }
  },
  {
    "name": "delete_timeflow",
    "description": "DELETE /timeflows/{timeflowId}",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        },
        "force_delete": {
          "type": "boolean",
          "description": "Parameter force_delete of type bool"
        }
      },
      "required": [
        "force_delete"
      ]
    }
  },
  {
    "name": "update_timeflow",
    "description": "PATCH /timeflows/{timeflowId}",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "get_timeflow_snapshot_day_range",
    "description": "GET /timeflows/{timeflowId}/timeflowSnapshotDayRange",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        }
      },
      "required": [
        "timeflowId"
      ]
    }
  },
  {
    "name": "get_timeflow_tags",
    "description": "GET /timeflows/{timeflowId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        }
      },
      "required": [
        "timeflowId"
      ]
    }
  },
  {
    "name": "create_timeflow_tags",
    "description": "POST /timeflows/{timeflowId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "timeflowId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_timeflow_tags",
    "description": "POST /timeflows/{timeflowId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_timeflows",
    "description": "POST /timeflows/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "timeflow_repair",
    "description": "POST /timeflows/{timeflowId}/repair",
    "parameters": {
      "type": "object",
      "properties": {
        "timeflowId": {
          "type": "string",
          "description": "Parameter timeflowId of type str"
        },
        "host": {
          "type": "string",
          "description": "Parameter host of type str"
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "directory": {
          "type": "string",
          "description": "Parameter directory of type str",
          "default": ""
        },
        "start_location": {
          "type": "string",
          "description": "Parameter start_location of type str",
          "default": ""
        },
        "end_location": {
          "type": "string",
          "description": "Parameter end_location of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "key_pair_private_key": {
          "type": "string",
          "description": "Parameter key_pair_private_key of type str",
          "default": ""
        },
        "key_pair_public_key": {
          "type": "string",
          "description": "Parameter key_pair_public_key of type str",
          "default": ""
        },
        "vault_id": {
          "type": "string",
          "description": "Parameter vault_id of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str"
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str"
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str"
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str"
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str"
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool"
        },
        "sshVerificationStrategy": {
          "type": "string",
          "description": "Parameter sshVerificationStrategy of type str"
        }
      },
      "required": [
        "azure_vault_name",
        "azure_vault_username_key",
        "azure_vault_secret_key",
        "cyberark_vault_query_string",
        "use_kerberos_authentication",
        "sshVerificationStrategy"
      ]
    }
  },
  {
    "name": "get_environments",
    "description": "GET /environments",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_environment",
    "description": "POST /environments",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "os_name": {
          "type": "string",
          "description": "Parameter os_name of type str"
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "is_cluster": {
          "type": "boolean",
          "description": "Parameter is_cluster of type bool"
        },
        "cluster_home": {
          "type": "string",
          "description": "Parameter cluster_home of type str",
          "default": ""
        },
        "staging_environment": {
          "type": "string",
          "description": "Parameter staging_environment of type str"
        },
        "connector_port": {
          "type": "integer",
          "description": "Parameter connector_port of type int"
        },
        "connector_authentication_key": {
          "type": "string",
          "description": "Parameter connector_authentication_key of type str",
          "default": ""
        },
        "is_target": {
          "type": "boolean",
          "description": "Parameter is_target of type bool",
          "default": ""
        },
        "ssh_port": {
          "type": "integer",
          "description": "Parameter ssh_port of type int",
          "default": ""
        },
        "toolkit_path": {
          "type": "string",
          "description": "Parameter toolkit_path of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "vault": {
          "type": "string",
          "description": "Parameter vault of type str",
          "default": ""
        },
        "vault_username": {
          "type": "string",
          "description": "Parameter vault_username of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str"
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str"
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str",
          "default": ""
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool",
          "default": ""
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool",
          "default": ""
        },
        "nfs_addresses": {
          "type": "string",
          "description": "Parameter nfs_addresses of type str",
          "default": ""
        },
        "ase_db_vault_username": {
          "type": "string",
          "description": "Parameter ase_db_vault_username of type str",
          "default": ""
        },
        "ase_db_username": {
          "type": "string",
          "description": "Parameter ase_db_username of type str",
          "default": ""
        },
        "ase_db_password": {
          "type": "string",
          "description": "Parameter ase_db_password of type str",
          "default": ""
        },
        "ase_db_vault": {
          "type": "string",
          "description": "Parameter ase_db_vault of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_engine of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_username_key of type str"
        },
        "ase_db_hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "ase_db_cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter ase_db_cyberark_vault_query_string of type str",
          "default": ""
        },
        "ase_db_use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter ase_db_use_kerberos_authentication of type bool",
          "default": ""
        },
        "ase_db_azure_vault_name": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_name of type str",
          "default": ""
        },
        "ase_db_azure_vault_username_key": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_username_key of type str",
          "default": ""
        },
        "ase_db_azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_secret_key of type str",
          "default": ""
        },
        "java_home": {
          "type": "string",
          "description": "Parameter java_home of type str",
          "default": ""
        },
        "dsp_keystore_path": {
          "type": "string",
          "description": "Parameter dsp_keystore_path of type str",
          "default": ""
        },
        "dsp_keystore_password": {
          "type": "string",
          "description": "Parameter dsp_keystore_password of type str",
          "default": ""
        },
        "dsp_keystore_alias": {
          "type": "string",
          "description": "Parameter dsp_keystore_alias of type str",
          "default": ""
        },
        "dsp_truststore_path": {
          "type": "string",
          "description": "Parameter dsp_truststore_path of type str",
          "default": ""
        },
        "dsp_truststore_password": {
          "type": "string",
          "description": "Parameter dsp_truststore_password of type str"
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "description",
        "tags",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "compatible_repositories_by_snapshot",
    "description": "POST /environments/compatible_repositories_by_snapshot",
    "parameters": {
      "type": "object",
      "properties": {
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "snapshot_id": {
          "type": "string",
          "description": "Parameter snapshot_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "compatible_repositories_by_timestamp",
    "description": "POST /environments/compatible_repositories_by_timestamp",
    "parameters": {
      "type": "object",
      "properties": {
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "timestamp": {
          "type": "string",
          "description": "Parameter timestamp of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "compatible_repositories_from_bookmark",
    "description": "POST /environments/compatible_repositories_from_bookmark",
    "parameters": {
      "type": "object",
      "properties": {
        "bookmark_id": {
          "type": "string",
          "description": "Parameter bookmark_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str"
        }
      },
      "required": [
        "environment_id"
      ]
    }
  },
  {
    "name": "compatible_repositories_by_location",
    "description": "POST /environments/compatible_repositories_by_location",
    "parameters": {
      "type": "object",
      "properties": {
        "source_data_id": {
          "type": "string",
          "description": "Parameter source_data_id of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "location": {
          "type": "string",
          "description": "Parameter location of type str",
          "default": ""
        },
        "timeflow_id": {
          "type": "string",
          "description": "Parameter timeflow_id of type str",
          "default": ""
        },
        "environment_id": {
          "type": "string",
          "description": "Parameter environment_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "delete_repository",
    "description": "DELETE /environments/{environmentId}/repository/{repositoryId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "repositoryId": {
          "type": "string",
          "description": "Parameter repositoryId of type str"
        }
      },
      "required": [
        "environmentId",
        "repositoryId"
      ]
    }
  },
  {
    "name": "update_repository",
    "description": "PATCH /environments/{environmentId}/repository/{repositoryId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "repositoryId": {
          "type": "string",
          "description": "Parameter repositoryId of type str"
        },
        "allow_provisioning": {
          "type": "boolean",
          "description": "Parameter allow_provisioning of type bool",
          "default": ""
        },
        "is_staging": {
          "type": "boolean",
          "description": "Parameter is_staging of type bool",
          "default": ""
        },
        "version": {
          "type": "string",
          "description": "Parameter version of type str"
        },
        "oracle_base": {
          "type": "string",
          "description": "Parameter oracle_base of type str"
        },
        "bits": {
          "type": "integer",
          "description": "Parameter bits of type int"
        }
      },
      "required": [
        "oracle_base",
        "bits"
      ]
    }
  },
  {
    "name": "create_repository",
    "description": "POST /environments/{environmentId}/repository",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "database_type": {
          "type": "string",
          "description": "Parameter database_type of type str",
          "default": ""
        },
        "bits": {
          "type": "integer",
          "description": "Parameter bits of type int",
          "default": ""
        },
        "installation_home": {
          "type": "string",
          "description": "Parameter installation_home of type str",
          "default": ""
        },
        "version": {
          "type": "string",
          "description": "Parameter version of type str"
        },
        "oracle_base": {
          "type": "string",
          "description": "Parameter oracle_base of type str"
        },
        "allow_provisioning": {
          "type": "boolean",
          "description": "Parameter allow_provisioning of type bool",
          "default": ""
        },
        "is_staging": {
          "type": "boolean",
          "description": "Parameter is_staging of type bool"
        },
        "applied_patches": {
          "type": "string",
          "description": "Parameter applied_patches of type str",
          "default": ""
        },
        "full_text_installed": {
          "type": "boolean",
          "description": "Parameter full_text_installed of type bool"
        },
        "server_name": {
          "type": "string",
          "description": "Parameter server_name of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "instance_owner": {
          "type": "string",
          "description": "Parameter instance_owner of type str"
        },
        "instance_name": {
          "type": "string",
          "description": "Parameter instance_name of type str"
        }
      },
      "required": [
        "instance_owner",
        "instance_name"
      ]
    }
  },
  {
    "name": "create_host",
    "description": "POST /environments/{environmentId}/hosts",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "nfs_addresses": {
          "type": "string",
          "description": "Parameter nfs_addresses of type str"
        },
        "ssh_port": {
          "type": "integer",
          "description": "Parameter ssh_port of type int",
          "default": ""
        },
        "privilege_elevation_profile_reference": {
          "type": "string",
          "description": "Parameter privilege_elevation_profile_reference of type str",
          "default": ""
        },
        "dsp_keystore_alias": {
          "type": "string",
          "description": "Parameter dsp_keystore_alias of type str",
          "default": ""
        },
        "dsp_keystore_password": {
          "type": "string",
          "description": "Parameter dsp_keystore_password of type str",
          "default": ""
        },
        "dsp_keystore_path": {
          "type": "string",
          "description": "Parameter dsp_keystore_path of type str",
          "default": ""
        },
        "dsp_truststore_password": {
          "type": "string",
          "description": "Parameter dsp_truststore_password of type str",
          "default": ""
        },
        "dsp_truststore_path": {
          "type": "string",
          "description": "Parameter dsp_truststore_path of type str",
          "default": ""
        },
        "java_home": {
          "type": "string",
          "description": "Parameter java_home of type str",
          "default": ""
        },
        "toolkit_path": {
          "type": "string",
          "description": "Parameter toolkit_path of type str",
          "default": ""
        },
        "oracle_jdbc_keystore_password": {
          "type": "string",
          "description": "Parameter oracle_jdbc_keystore_password of type str",
          "default": ""
        },
        "oracle_tde_keystores_root_path": {
          "type": "string",
          "description": "Parameter oracle_tde_keystores_root_path of type str",
          "default": ""
        },
        "ssh_verification_strategy": {
          "type": "string",
          "description": "Parameter ssh_verification_strategy of type str",
          "default": ""
        },
        "oracle_cluster_node_virtual_ips": {
          "type": "string",
          "description": "Parameter oracle_cluster_node_virtual_ips of type str"
        }
      },
      "required": [
        "oracle_cluster_node_virtual_ips"
      ]
    }
  },
  {
    "name": "delete_host",
    "description": "DELETE /environments/{environmentId}/hosts/{hostId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "hostId": {
          "type": "string",
          "description": "Parameter hostId of type str"
        }
      },
      "required": [
        "environmentId",
        "hostId"
      ]
    }
  },
  {
    "name": "update_host",
    "description": "PATCH /environments/{environmentId}/hosts/{hostId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "hostId": {
          "type": "string",
          "description": "Parameter hostId of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str"
        },
        "oracle_cluster_node_name": {
          "type": "string",
          "description": "Parameter oracle_cluster_node_name of type str",
          "default": ""
        },
        "oracle_cluster_node_enabled": {
          "type": "boolean",
          "description": "Parameter oracle_cluster_node_enabled of type bool",
          "default": ""
        },
        "oracle_cluster_node_virtual_ips": {
          "type": "string",
          "description": "Parameter oracle_cluster_node_virtual_ips of type str"
        },
        "nfs_addresses": {
          "type": "string",
          "description": "Parameter nfs_addresses of type str",
          "default": ""
        },
        "ssh_port": {
          "type": "integer",
          "description": "Parameter ssh_port of type int",
          "default": ""
        },
        "toolkit_path": {
          "type": "string",
          "description": "Parameter toolkit_path of type str",
          "default": ""
        },
        "java_home": {
          "type": "string",
          "description": "Parameter java_home of type str",
          "default": ""
        },
        "dsp_keystore_path": {
          "type": "string",
          "description": "Parameter dsp_keystore_path of type str",
          "default": ""
        },
        "dsp_keystore_password": {
          "type": "string",
          "description": "Parameter dsp_keystore_password of type str",
          "default": ""
        },
        "dsp_keystore_alias": {
          "type": "string",
          "description": "Parameter dsp_keystore_alias of type str",
          "default": ""
        },
        "dsp_truststore_path": {
          "type": "string",
          "description": "Parameter dsp_truststore_path of type str"
        },
        "dsp_truststore_password": {
          "type": "string",
          "description": "Parameter dsp_truststore_password of type str",
          "default": ""
        },
        "connector_port": {
          "type": "integer",
          "description": "Parameter connector_port of type int",
          "default": ""
        },
        "oracle_jdbc_keystore_password": {
          "type": "string",
          "description": "Parameter oracle_jdbc_keystore_password of type str",
          "default": ""
        },
        "oracle_tde_keystores_root_path": {
          "type": "string",
          "description": "Parameter oracle_tde_keystores_root_path of type str",
          "default": ""
        },
        "ssh_verification_strategy": {
          "type": "string",
          "description": "Parameter ssh_verification_strategy of type str",
          "default": ""
        },
        "connector_authentication_key": {
          "type": "string",
          "description": "Parameter connector_authentication_key of type str",
          "default": ""
        },
        "oracle_tde_okv_home_path": {
          "type": "string",
          "description": "Parameter oracle_tde_okv_home_path of type str"
        },
        "oracle_tde_external_key_manager_credential": {
          "type": "string",
          "description": "Parameter oracle_tde_external_key_manager_credential of type str"
        }
      },
      "required": [
        "oracle_tde_okv_home_path",
        "oracle_tde_external_key_manager_credential"
      ]
    }
  },
  {
    "name": "get_tags_environment",
    "description": "GET /environments/{environmentId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "create_environment_tags",
    "description": "POST /environments/{environmentId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "environmentId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_environment_tags",
    "description": "POST /environments/{environmentId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_environment_by_id",
    "description": "GET /environments/{environmentId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "delete_environment",
    "description": "DELETE /environments/{environmentId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "update_environment",
    "description": "PATCH /environments/{environmentId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "staging_environment": {
          "type": "string",
          "description": "Parameter staging_environment of type str",
          "default": ""
        },
        "cluster_address": {
          "type": "string",
          "description": "Parameter cluster_address of type str",
          "default": ""
        },
        "cluster_home": {
          "type": "string",
          "description": "Parameter cluster_home of type str",
          "default": ""
        },
        "ase_db_username": {
          "type": "string",
          "description": "Parameter ase_db_username of type str",
          "default": ""
        },
        "ase_db_password": {
          "type": "string",
          "description": "Parameter ase_db_password of type str",
          "default": ""
        },
        "ase_db_vault": {
          "type": "string",
          "description": "Parameter ase_db_vault of type str",
          "default": ""
        },
        "ase_db_vault_username": {
          "type": "string",
          "description": "Parameter ase_db_vault_username of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_engine of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_username_key of type str",
          "default": ""
        },
        "ase_db_hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter ase_db_hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "ase_db_cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter ase_db_cyberark_vault_query_string of type str",
          "default": ""
        },
        "ase_db_azure_vault_name": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_name of type str",
          "default": ""
        },
        "ase_db_azure_vault_username_key": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_username_key of type str",
          "default": ""
        },
        "ase_db_azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter ase_db_azure_vault_secret_key of type str"
        },
        "ase_db_use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter ase_db_use_kerberos_authentication of type bool"
        },
        "encryption_enabled": {
          "type": "boolean",
          "description": "Parameter encryption_enabled of type bool",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        }
      },
      "required": [
        "description"
      ]
    }
  },
  {
    "name": "search_environments",
    "description": "POST /environments/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "enable_environment",
    "description": "POST /environments/{environmentId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "disable_environment",
    "description": "POST /environments/{environmentId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "refresh_environment",
    "description": "POST /environments/{environmentId}/refresh",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "list_environment_users",
    "description": "GET /environments/{environmentId}/users",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        }
      },
      "required": [
        "environmentId"
      ]
    }
  },
  {
    "name": "create_environment_user",
    "description": "POST /environments/{environmentId}/users",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "vault": {
          "type": "string",
          "description": "Parameter vault of type str",
          "default": ""
        },
        "vault_username": {
          "type": "string",
          "description": "Parameter vault_username of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str",
          "default": ""
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str",
          "default": ""
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str"
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool"
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool"
        }
      },
      "required": [
        "use_engine_public_key"
      ]
    }
  },
  {
    "name": "update_environment_user",
    "description": "PUT /environments/{environmentId}/users/{userRef}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "userRef": {
          "type": "string",
          "description": "Parameter userRef of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "vault": {
          "type": "string",
          "description": "Parameter vault of type str",
          "default": ""
        },
        "vault_username": {
          "type": "string",
          "description": "Parameter vault_username of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str",
          "default": ""
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str"
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str"
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool"
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool"
        }
      },
      "required": [
        "use_kerberos_authentication",
        "use_engine_public_key"
      ]
    }
  },
  {
    "name": "delete_environment_user",
    "description": "DELETE /environments/{environmentId}/users/{userRef}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "userRef": {
          "type": "string",
          "description": "Parameter userRef of type str"
        }
      },
      "required": [
        "environmentId",
        "userRef"
      ]
    }
  },
  {
    "name": "primary_environment_user",
    "description": "POST /environments/{environmentId}/users/{userRef}/primary",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "userRef": {
          "type": "string",
          "description": "Parameter userRef of type str"
        }
      },
      "required": [
        "environmentId",
        "userRef"
      ]
    }
  },
  {
    "name": "create_oracle_listener",
    "description": "POST /environments/{environmentId}/listeners",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "type": {
          "type": "string",
          "description": "Parameter type of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "protocol_addresses": {
          "type": "string",
          "description": "Parameter protocol_addresses of type str"
        },
        "host_id": {
          "type": "string",
          "description": "Parameter host_id of type str"
        }
      },
      "required": [
        "protocol_addresses",
        "host_id"
      ]
    }
  },
  {
    "name": "delete_oracle_listener",
    "description": "DELETE /environments/{environmentId}/listeners/{listenerId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str"
        },
        "listenerId": {
          "type": "string",
          "description": "Parameter listenerId of type str"
        }
      },
      "required": [
        "environmentId",
        "listenerId"
      ]
    }
  },
  {
    "name": "update_oracle_listener",
    "description": "PATCH /environments/{environmentId}/listeners/{listenerId}",
    "parameters": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Parameter environmentId of type str",
          "default": ""
        },
        "listenerId": {
          "type": "string",
          "description": "Parameter listenerId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "protocol_addresses": {
          "type": "string",
          "description": "Parameter protocol_addresses of type str"
        }
      },
      "required": [
        "name",
        "protocol_addresses"
      ]
    }
  },
  {
    "name": "validate_java_path",
    "description": "POST /management/engines/{engineId}/validate/java-path",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str",
          "default": ""
        },
        "java_home": {
          "type": "string",
          "description": "Parameter java_home of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int"
        },
        "host_name": {
          "type": "string",
          "description": "Parameter host_name of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "use_engine_public_key": {
          "type": "boolean",
          "description": "Parameter use_engine_public_key of type bool",
          "default": ""
        },
        "vault_id": {
          "type": "string",
          "description": "Parameter vault_id of type str",
          "default": ""
        },
        "hashicorp_vault_engine": {
          "type": "string",
          "description": "Parameter hashicorp_vault_engine of type str",
          "default": ""
        },
        "hashicorp_vault_secret_path": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_path of type str",
          "default": ""
        },
        "hashicorp_vault_username_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_key of type str",
          "default": ""
        },
        "hashicorp_vault_secret_key": {
          "type": "string",
          "description": "Parameter hashicorp_vault_secret_key of type str",
          "default": ""
        },
        "azure_vault_name": {
          "type": "string",
          "description": "Parameter azure_vault_name of type str"
        },
        "azure_vault_username_key": {
          "type": "string",
          "description": "Parameter azure_vault_username_key of type str"
        },
        "azure_vault_secret_key": {
          "type": "string",
          "description": "Parameter azure_vault_secret_key of type str"
        },
        "cyberark_vault_query_string": {
          "type": "string",
          "description": "Parameter cyberark_vault_query_string of type str"
        },
        "use_kerberos_authentication": {
          "type": "boolean",
          "description": "Parameter use_kerberos_authentication of type bool"
        }
      },
      "required": [
        "azure_vault_username_key",
        "azure_vault_secret_key",
        "cyberark_vault_query_string",
        "use_kerberos_authentication"
      ]
    }
  },
  {
    "name": "get_historical_storage_summary_aggregate",
    "description": "GET /historical-storage-summary-aggregate",
    "parameters": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "description": "Parameter start_date of type str",
          "default": ""
        },
        "end_date": {
          "type": "string",
          "description": "Parameter end_date of type str",
          "default": ""
        },
        "include_projection": {
          "type": "boolean",
          "description": "Parameter include_projection of type bool"
        },
        "engine_ids": {
          "type": "string",
          "description": "Parameter engine_ids of type str",
          "default": ""
        },
        "dsource_ids": {
          "type": "string",
          "description": "Parameter dsource_ids of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "cdb_ids": {
          "type": "string",
          "description": "Parameter cdb_ids of type str",
          "default": ""
        },
        "vcdb_ids": {
          "type": "string",
          "description": "Parameter vcdb_ids of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_historical_storage_summary_by_engine",
    "description": "GET /historical-storage-summary-by-engine",
    "parameters": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "description": "Parameter start_date of type str",
          "default": ""
        },
        "end_date": {
          "type": "string",
          "description": "Parameter end_date of type str",
          "default": ""
        },
        "include_projection": {
          "type": "boolean",
          "description": "Parameter include_projection of type bool"
        },
        "engine_ids": {
          "type": "string",
          "description": "Parameter engine_ids of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_storage_savings_summary_report",
    "description": "POST /reporting/storage-savings-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_vdb_inventory_report",
    "description": "GET /reporting/vdb-inventory-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_vdb_inventory_report",
    "description": "POST /reporting/vdb-inventory-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_dsource_usage_report",
    "description": "GET /reporting/dsource-usage-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_dsource_usage_report",
    "description": "POST /reporting/dsource-usage-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_dsource_consumption_report",
    "description": "GET /reporting/dsource-consumption-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_dsource_consumption_report",
    "description": "POST /reporting/dsource-consumption-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_storage_capacity_data",
    "description": "GET /reporting/storage-capacity-data-report",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_storage_capacity_data",
    "description": "POST /reporting/storage-capacity-data-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_dataset_performance_analytics_summary",
    "description": "POST /reporting/dataset-performance-analytics-summary/search",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_dataset_performance_analytics",
    "description": "POST /reporting/dataset-performance-analytics",
    "parameters": {
      "type": "object",
      "properties": {
        "dataset_ids": {
          "type": "string",
          "description": "Parameter dataset_ids of type str"
        },
        "start": {
          "type": "string",
          "description": "Parameter start of type str"
        },
        "end": {
          "type": "string",
          "description": "Parameter end of type str"
        },
        "interval": {
          "type": "integer",
          "description": "Parameter interval of type int"
        }
      },
      "required": [
        "dataset_ids",
        "start",
        "end",
        "interval"
      ]
    }
  },
  {
    "name": "get_database_templates",
    "description": "GET /database-templates",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_database_template",
    "description": "POST /database-templates",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "source_type": {
          "type": "string",
          "description": "Parameter source_type of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        },
        "parameters": {
          "type": "string",
          "description": "Parameter parameters of type str",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "make_current_account_owner",
        "tags"
      ]
    }
  },
  {
    "name": "get_database_template_by_id",
    "description": "GET /database-templates/{databaseTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str"
        }
      },
      "required": [
        "databaseTemplateId"
      ]
    }
  },
  {
    "name": "delete_database_template",
    "description": "DELETE /database-templates/{databaseTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str"
        }
      },
      "required": [
        "databaseTemplateId"
      ]
    }
  },
  {
    "name": "update_database_template",
    "description": "PATCH /database-templates/{databaseTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "source_type": {
          "type": "string",
          "description": "Parameter source_type of type str",
          "default": ""
        },
        "parameters": {
          "type": "string",
          "description": "Parameter parameters of type str"
        }
      },
      "required": [
        "parameters"
      ]
    }
  },
  {
    "name": "get_database_template_tags",
    "description": "GET /database-templates/{databaseTemplateId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str"
        }
      },
      "required": [
        "databaseTemplateId"
      ]
    }
  },
  {
    "name": "create_database_template_tags",
    "description": "POST /database-templates/{databaseTemplateId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "databaseTemplateId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_database_template_tag",
    "description": "POST /database-templates/{databaseTemplateId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "databaseTemplateId": {
          "type": "string",
          "description": "Parameter databaseTemplateId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_database_templates",
    "description": "POST /database-templates/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "import_database_templates",
    "description": "POST /database-templates/import",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "undo_import_database_templates",
    "description": "POST /database-templates/undo-import",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_cdbs",
    "description": "GET /cdbs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_cdbs",
    "description": "POST /cdbs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_cdb_by_id",
    "description": "GET /cdbs/{cdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        }
      },
      "required": [
        "cdbId"
      ]
    }
  },
  {
    "name": "update_cdb",
    "description": "PATCH /cdbs/{cdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str"
        },
        "logsync_enabled": {
          "type": "boolean",
          "description": "Parameter logsync_enabled of type bool",
          "default": ""
        },
        "logsync_mode": {
          "type": "string",
          "description": "Parameter logsync_mode of type str"
        },
        "logsync_interval": {
          "type": "integer",
          "description": "Parameter logsync_interval of type int",
          "default": ""
        },
        "tde_keystore_password": {
          "type": "string",
          "description": "Parameter tde_keystore_password of type str",
          "default": ""
        },
        "tde_keystore_config_type": {
          "type": "string",
          "description": "Parameter tde_keystore_config_type of type str"
        }
      },
      "required": [
        "tde_keystore_config_type"
      ]
    }
  },
  {
    "name": "update_cdb_by_id",
    "description": "PATCH /cdbs/{cdbId}/update",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str"
        },
        "logsync_enabled": {
          "type": "boolean",
          "description": "Parameter logsync_enabled of type bool",
          "default": ""
        },
        "logsync_mode": {
          "type": "string",
          "description": "Parameter logsync_mode of type str"
        },
        "logsync_interval": {
          "type": "integer",
          "description": "Parameter logsync_interval of type int",
          "default": ""
        },
        "tde_keystore_password": {
          "type": "string",
          "description": "Parameter tde_keystore_password of type str",
          "default": ""
        },
        "tde_keystore_config_type": {
          "type": "string",
          "description": "Parameter tde_keystore_config_type of type str"
        }
      },
      "required": [
        "tde_keystore_config_type"
      ]
    }
  },
  {
    "name": "get_tags_cdb",
    "description": "GET /cdbs/{cdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        }
      },
      "required": [
        "cdbId"
      ]
    }
  },
  {
    "name": "create_cdb_tags",
    "description": "POST /cdbs/{cdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "cdbId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_cdb_tags",
    "description": "POST /cdbs/{cdbId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "enable_cdb",
    "description": "POST /cdbs/{cdbId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "attempt_start": {
          "type": "boolean",
          "description": "Parameter attempt_start of type bool"
        }
      },
      "required": [
        "attempt_start"
      ]
    }
  },
  {
    "name": "disable_cdb",
    "description": "POST /cdbs/{cdbId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "attempt_cleanup": {
          "type": "boolean",
          "description": "Parameter attempt_cleanup of type bool"
        }
      },
      "required": [
        "attempt_cleanup"
      ]
    }
  },
  {
    "name": "get_cdb_deletion_dependencies",
    "description": "GET /cdbs/{cdbId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        }
      },
      "required": [
        "cdbId"
      ]
    }
  },
  {
    "name": "delete_cdb",
    "description": "POST /cdbs/{cdbId}/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "force": {
          "type": "boolean",
          "description": "Parameter force of type bool"
        },
        "delete_all_dependent_datasets": {
          "type": "boolean",
          "description": "Parameter delete_all_dependent_datasets of type bool"
        }
      },
      "required": [
        "delete_all_dependent_datasets"
      ]
    }
  },
  {
    "name": "upgrade_cdb",
    "description": "POST /cdbs/{cdbId}/upgrade",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        }
      },
      "required": [
        "cdbId",
        "repository_id",
        "environment_user_id"
      ]
    }
  },
  {
    "name": "detach_cdb",
    "description": "POST /cdbs/{cdbId}/detachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        }
      },
      "required": [
        "cdbId"
      ]
    }
  },
  {
    "name": "attach_cdb",
    "description": "POST /cdbs/{cdbId}/attachSource",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "dsource_id": {
          "type": "string",
          "description": "Parameter dsource_id of type str"
        }
      },
      "required": [
        "cdbId",
        "dsource_id"
      ]
    }
  },
  {
    "name": "verify_cdb_jdbc_connection_string",
    "description": "POST /cdbs/{cdbId}/jdbc-check",
    "parameters": {
      "type": "object",
      "properties": {
        "cdbId": {
          "type": "string",
          "description": "Parameter cdbId of type str"
        },
        "database_username": {
          "type": "string",
          "description": "Parameter database_username of type str"
        },
        "database_password": {
          "type": "string",
          "description": "Parameter database_password of type str"
        },
        "jdbc_connection_string": {
          "type": "string",
          "description": "Parameter jdbc_connection_string of type str"
        }
      },
      "required": [
        "cdbId",
        "database_username",
        "database_password",
        "jdbc_connection_string"
      ]
    }
  },
  {
    "name": "get_vcdbs",
    "description": "GET /vcdbs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_vcdbs",
    "description": "POST /vcdbs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_vcdb_by_id",
    "description": "GET /vcdbs/{vcdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        }
      },
      "required": [
        "vcdbId"
      ]
    }
  },
  {
    "name": "update_vcdb",
    "description": "PATCH /vcdbs/{vcdbId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str",
          "default": ""
        },
        "node_listeners": {
          "type": "string",
          "description": "Parameter node_listeners of type str"
        },
        "invoke_datapatch": {
          "type": "boolean",
          "description": "Parameter invoke_datapatch of type bool",
          "default": ""
        },
        "tde_keystore_password": {
          "type": "string",
          "description": "Parameter tde_keystore_password of type str",
          "default": ""
        },
        "tde_keystore_config_type": {
          "type": "string",
          "description": "Parameter tde_keystore_config_type of type str",
          "default": ""
        },
        "tde_key_identifier": {
          "type": "string",
          "description": "Parameter tde_key_identifier of type str"
        }
      },
      "required": [
        "tde_key_identifier"
      ]
    }
  },
  {
    "name": "get_tags_vcdb",
    "description": "GET /vcdbs/{vcdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        }
      },
      "required": [
        "vcdbId"
      ]
    }
  },
  {
    "name": "create_vcdb_tags",
    "description": "POST /vcdbs/{vcdbId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "vcdbId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_vcdb_tags",
    "description": "POST /vcdbs/{vcdbId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "enable_vcdb",
    "description": "POST /vcdbs/{vcdbId}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "attempt_start": {
          "type": "boolean",
          "description": "Parameter attempt_start of type bool"
        }
      },
      "required": [
        "attempt_start"
      ]
    }
  },
  {
    "name": "disable_vcdb",
    "description": "POST /vcdbs/{vcdbId}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "attempt_cleanup": {
          "type": "boolean",
          "description": "Parameter attempt_cleanup of type bool"
        }
      },
      "required": [
        "attempt_cleanup"
      ]
    }
  },
  {
    "name": "get_vcdb_deletion_dependencies",
    "description": "GET /vcdbs/{vcdbId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        }
      },
      "required": [
        "vcdbId"
      ]
    }
  },
  {
    "name": "delete_vcdb",
    "description": "POST /vcdbs/{vcdbId}/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "force": {
          "type": "boolean",
          "description": "Parameter force of type bool"
        },
        "delete_all_dependent_datasets": {
          "type": "boolean",
          "description": "Parameter delete_all_dependent_datasets of type bool"
        }
      },
      "required": [
        "delete_all_dependent_datasets"
      ]
    }
  },
  {
    "name": "update_vcdb_by_id",
    "description": "PATCH /vcdbs/{vcdbId}/update",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str",
          "default": ""
        },
        "oracle_services": {
          "type": "string",
          "description": "Parameter oracle_services of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str",
          "default": ""
        },
        "node_listeners": {
          "type": "string",
          "description": "Parameter node_listeners of type str"
        },
        "invoke_datapatch": {
          "type": "boolean",
          "description": "Parameter invoke_datapatch of type bool",
          "default": ""
        },
        "tde_keystore_password": {
          "type": "string",
          "description": "Parameter tde_keystore_password of type str",
          "default": ""
        },
        "tde_keystore_config_type": {
          "type": "string",
          "description": "Parameter tde_keystore_config_type of type str",
          "default": ""
        },
        "tde_key_identifier": {
          "type": "string",
          "description": "Parameter tde_key_identifier of type str"
        }
      },
      "required": [
        "tde_key_identifier"
      ]
    }
  },
  {
    "name": "start_vcdb",
    "description": "POST /vcdbs/{vcdbId}/start",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str"
        }
      },
      "required": [
        "instances"
      ]
    }
  },
  {
    "name": "stop_vcdb",
    "description": "POST /vcdbs/{vcdbId}/stop",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str",
          "default": ""
        },
        "instances": {
          "type": "string",
          "description": "Parameter instances of type str"
        },
        "abort": {
          "type": "boolean",
          "description": "Parameter abort of type bool"
        }
      },
      "required": [
        "abort"
      ]
    }
  },
  {
    "name": "upgrade_vcdb",
    "description": "POST /vcdbs/{vcdbId}/upgrade",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "repository_id": {
          "type": "string",
          "description": "Parameter repository_id of type str"
        },
        "environment_user_id": {
          "type": "string",
          "description": "Parameter environment_user_id of type str"
        }
      },
      "required": [
        "vcdbId",
        "repository_id",
        "environment_user_id"
      ]
    }
  },
  {
    "name": "verify_vcdb_jdbc_connection_string",
    "description": "POST /vcdbs/{vcdbId}/jdbc-check",
    "parameters": {
      "type": "object",
      "properties": {
        "vcdbId": {
          "type": "string",
          "description": "Parameter vcdbId of type str"
        },
        "database_username": {
          "type": "string",
          "description": "Parameter database_username of type str"
        },
        "database_password": {
          "type": "string",
          "description": "Parameter database_password of type str"
        },
        "jdbc_connection_string": {
          "type": "string",
          "description": "Parameter jdbc_connection_string of type str"
        }
      },
      "required": [
        "vcdbId",
        "database_username",
        "database_password",
        "jdbc_connection_string"
      ]
    }
  },
  {
    "name": "list_virtualization_policies",
    "description": "GET /virtualization-policies",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_virtualization_policy",
    "description": "POST /virtualization-policies",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "policy_type": {
          "type": "string",
          "description": "Parameter policy_type of type str",
          "default": ""
        },
        "policy_targets": {
          "type": "string",
          "description": "Parameter policy_targets of type str",
          "default": ""
        },
        "provision_source": {
          "type": "string",
          "description": "Parameter provision_source of type str"
        },
        "timezone_id": {
          "type": "string",
          "description": "Parameter timezone_id of type str",
          "default": ""
        },
        "data_duration": {
          "type": "integer",
          "description": "Parameter data_duration of type int"
        },
        "data_unit": {
          "type": "string",
          "description": "Parameter data_unit of type str",
          "default": ""
        },
        "log_duration": {
          "type": "integer",
          "description": "Parameter log_duration of type int"
        },
        "log_unit": {
          "type": "string",
          "description": "Parameter log_unit of type str"
        },
        "num_of_daily": {
          "type": "integer",
          "description": "Parameter num_of_daily of type int",
          "default": ""
        },
        "num_of_weekly": {
          "type": "integer",
          "description": "Parameter num_of_weekly of type int"
        },
        "day_of_week": {
          "type": "string",
          "description": "Parameter day_of_week of type str"
        },
        "num_of_monthly": {
          "type": "integer",
          "description": "Parameter num_of_monthly of type int"
        },
        "day_of_month": {
          "type": "integer",
          "description": "Parameter day_of_month of type int",
          "default": ""
        },
        "num_of_yearly": {
          "type": "integer",
          "description": "Parameter num_of_yearly of type int",
          "default": ""
        },
        "day_of_year": {
          "type": "string",
          "description": "Parameter day_of_year of type str"
        },
        "schedules": {
          "type": "string",
          "description": "Parameter schedules of type str",
          "default": ""
        },
        "size": {
          "type": "integer",
          "description": "Parameter size of type int"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "size",
        "tags"
      ]
    }
  },
  {
    "name": "search_virtualization_policies",
    "description": "POST /virtualization-policies/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_policy_targets",
    "description": "POST /virtualization-policies/targets/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_virtualization_policy_by_id",
    "description": "GET /virtualization-policies/{policyId}",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "delete_virtualization_policy",
    "description": "DELETE /virtualization-policies/{policyId}",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "update_virtualization_policy",
    "description": "PATCH /virtualization-policies/{policyId}",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "timezone_id": {
          "type": "string",
          "description": "Parameter timezone_id of type str"
        },
        "data_duration": {
          "type": "integer",
          "description": "Parameter data_duration of type int",
          "default": ""
        },
        "data_unit": {
          "type": "string",
          "description": "Parameter data_unit of type str"
        },
        "log_duration": {
          "type": "integer",
          "description": "Parameter log_duration of type int",
          "default": ""
        },
        "log_unit": {
          "type": "string",
          "description": "Parameter log_unit of type str"
        },
        "num_of_daily": {
          "type": "integer",
          "description": "Parameter num_of_daily of type int"
        },
        "num_of_weekly": {
          "type": "integer",
          "description": "Parameter num_of_weekly of type int",
          "default": ""
        },
        "day_of_week": {
          "type": "string",
          "description": "Parameter day_of_week of type str"
        },
        "num_of_monthly": {
          "type": "integer",
          "description": "Parameter num_of_monthly of type int"
        },
        "day_of_month": {
          "type": "integer",
          "description": "Parameter day_of_month of type int"
        },
        "num_of_yearly": {
          "type": "integer",
          "description": "Parameter num_of_yearly of type int",
          "default": ""
        },
        "day_of_year": {
          "type": "string",
          "description": "Parameter day_of_year of type str",
          "default": ""
        },
        "schedules": {
          "type": "string",
          "description": "Parameter schedules of type str"
        },
        "size": {
          "type": "integer",
          "description": "Parameter size of type int"
        }
      },
      "required": [
        "size"
      ]
    }
  },
  {
    "name": "convert_virtualization_policy",
    "description": "POST /virtualization-policies/{policyId}/convert",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "get_virtualization_policy_tags",
    "description": "GET /virtualization-policies/{policyId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "create_virtualization_policy_tags",
    "description": "POST /virtualization-policies/{policyId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "policyId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_virtualization_policy_tags",
    "description": "POST /virtualization-policies/{policyId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "apply_virtualization_policy_by_id_or_name",
    "description": "POST /virtualization-policies/{policyId}/apply",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "unapply_virtualization_policy_by_id_or_name",
    "description": "POST /virtualization-policies/{policyId}/unapply",
    "parameters": {
      "type": "object",
      "properties": {
        "policyId": {
          "type": "string",
          "description": "Parameter policyId of type str"
        }
      },
      "required": [
        "policyId"
      ]
    }
  },
  {
    "name": "get_replication_profiles",
    "description": "GET /replication-profiles",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_replication_profile",
    "description": "POST /replication-profiles",
    "parameters": {
      "type": "object",
      "properties": {
        "replication_mode": {
          "type": "string",
          "description": "Parameter replication_mode of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "target_engine_id": {
          "type": "string",
          "description": "Parameter target_engine_id of type str"
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "target_host": {
          "type": "string",
          "description": "Parameter target_host of type str",
          "default": ""
        },
        "target_port": {
          "type": "integer",
          "description": "Parameter target_port of type int",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        },
        "schedule": {
          "type": "string",
          "description": "Parameter schedule of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "enable_tag_replication": {
          "type": "boolean",
          "description": "Parameter enable_tag_replication of type bool"
        },
        "bandwidth_limit": {
          "type": "integer",
          "description": "Parameter bandwidth_limit of type int"
        },
        "number_of_connections": {
          "type": "integer",
          "description": "Parameter number_of_connections of type int"
        },
        "encrypted": {
          "type": "boolean",
          "description": "Parameter encrypted of type bool",
          "default": ""
        },
        "automatic_replication": {
          "type": "boolean",
          "description": "Parameter automatic_replication of type bool",
          "default": ""
        },
        "use_system_socks_setting": {
          "type": "boolean",
          "description": "Parameter use_system_socks_setting of type bool",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "dsource_ids": {
          "type": "string",
          "description": "Parameter dsource_ids of type str",
          "default": ""
        },
        "cdb_ids": {
          "type": "string",
          "description": "Parameter cdb_ids of type str"
        },
        "vcdb_ids": {
          "type": "string",
          "description": "Parameter vcdb_ids of type str"
        },
        "group_ids": {
          "type": "string",
          "description": "Parameter group_ids of type str"
        },
        "replicate_entire_engine": {
          "type": "boolean",
          "description": "Parameter replicate_entire_engine of type bool"
        }
      },
      "required": [
        "vcdb_ids",
        "group_ids",
        "replicate_entire_engine"
      ]
    }
  },
  {
    "name": "search_replication_profiles",
    "description": "POST /replication-profiles/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "migrate_rerun",
    "description": "POST /migrate-job/re-run",
    "parameters": {
      "type": "object",
      "properties": {
        "job_type": {
          "type": "string",
          "description": "Parameter job_type of type str"
        }
      },
      "required": [
        "job_type"
      ]
    }
  },
  {
    "name": "get_virtualization_job_history",
    "description": "GET /virtualization-jobs/history",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "object_id": {
          "type": "string",
          "description": "Parameter object_id of type str",
          "default": ""
        },
        "object_type": {
          "type": "string",
          "description": "Parameter object_type of type str",
          "default": ""
        },
        "job_type": {
          "type": "string",
          "description": "Parameter job_type of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_job_history",
    "description": "POST /virtualization-jobs/history/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_virtualization_action_history",
    "description": "GET /virtualization-actions/history",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_action_history",
    "description": "POST /virtualization-actions/history/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "execute_replication_profile",
    "description": "POST /replication-profiles/{replicationProfileId}/execute",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "get_replication_profile_by_id",
    "description": "GET /replication-profiles/{replicationProfileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "delete_replication_profile",
    "description": "DELETE /replication-profiles/{replicationProfileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "update_replication_profile",
    "description": "PATCH /replication-profiles/{replicationProfileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "target_engine_id": {
          "type": "string",
          "description": "Parameter target_engine_id of type str",
          "default": ""
        },
        "target_host": {
          "type": "string",
          "description": "Parameter target_host of type str"
        },
        "target_port": {
          "type": "integer",
          "description": "Parameter target_port of type int",
          "default": ""
        },
        "replication_mode": {
          "type": "string",
          "description": "Parameter replication_mode of type str",
          "default": ""
        },
        "schedule": {
          "type": "string",
          "description": "Parameter schedule of type str",
          "default": ""
        },
        "vdb_ids": {
          "type": "string",
          "description": "Parameter vdb_ids of type str",
          "default": ""
        },
        "dsource_ids": {
          "type": "string",
          "description": "Parameter dsource_ids of type str",
          "default": ""
        },
        "cdb_ids": {
          "type": "string",
          "description": "Parameter cdb_ids of type str",
          "default": ""
        },
        "vcdb_ids": {
          "type": "string",
          "description": "Parameter vcdb_ids of type str",
          "default": ""
        },
        "group_ids": {
          "type": "string",
          "description": "Parameter group_ids of type str"
        },
        "enable_tag_replication": {
          "type": "boolean",
          "description": "Parameter enable_tag_replication of type bool"
        },
        "replicate_entire_engine": {
          "type": "boolean",
          "description": "Parameter replicate_entire_engine of type bool"
        },
        "bandwidth_limit": {
          "type": "integer",
          "description": "Parameter bandwidth_limit of type int"
        },
        "number_of_connections": {
          "type": "integer",
          "description": "Parameter number_of_connections of type int"
        },
        "encrypted": {
          "type": "boolean",
          "description": "Parameter encrypted of type bool"
        },
        "automatic_replication": {
          "type": "boolean",
          "description": "Parameter automatic_replication of type bool"
        },
        "use_system_socks_setting": {
          "type": "boolean",
          "description": "Parameter use_system_socks_setting of type bool"
        }
      },
      "required": [
        "use_system_socks_setting"
      ]
    }
  },
  {
    "name": "get_replication_profile_tags",
    "description": "GET /replication-profiles/{replicationProfileId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "create_replication_profile_tags",
    "description": "POST /replication-profiles/{replicationProfileId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "replicationProfileId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_replication_profile_tags",
    "description": "POST /replication-profiles/{replicationProfileId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "enable_tag_replication",
    "description": "POST /replication-profiles/{replicationProfileId}/enable-tag-replication",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "disable_tag_replication",
    "description": "POST /replication-profiles/{replicationProfileId}/disable-tag-replication",
    "parameters": {
      "type": "object",
      "properties": {
        "replicationProfileId": {
          "type": "string",
          "description": "Parameter replicationProfileId of type str"
        }
      },
      "required": [
        "replicationProfileId"
      ]
    }
  },
  {
    "name": "list_namespaces",
    "description": "GET /namespaces",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_namespaces",
    "description": "POST /namespaces/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_namespace_by_id",
    "description": "GET /namespace/{namespaceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        }
      },
      "required": [
        "namespaceId"
      ]
    }
  },
  {
    "name": "delete_namespace",
    "description": "DELETE /namespace/{namespaceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        }
      },
      "required": [
        "namespaceId"
      ]
    }
  },
  {
    "name": "update_namespace",
    "description": "PATCH /namespace/{namespaceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        }
      },
      "required": [
        "description"
      ]
    }
  },
  {
    "name": "failover_namespace",
    "description": "POST /namespace/{namespaceId}/failover",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        },
        "enable_failback": {
          "type": "boolean",
          "description": "Parameter enable_failback of type bool"
        }
      },
      "required": [
        "enable_failback"
      ]
    }
  },
  {
    "name": "commit_failover_namespace",
    "description": "POST /namespace/{namespaceId}/commitFailover",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        }
      },
      "required": [
        "namespaceId"
      ]
    }
  },
  {
    "name": "failback_namespace",
    "description": "POST /namespace/{namespaceId}/failback",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        }
      },
      "required": [
        "namespaceId"
      ]
    }
  },
  {
    "name": "discard_namespace",
    "description": "POST /namespace/{namespaceId}/discard",
    "parameters": {
      "type": "object",
      "properties": {
        "namespaceId": {
          "type": "string",
          "description": "Parameter namespaceId of type str"
        }
      },
      "required": [
        "namespaceId"
      ]
    }
  },
  {
    "name": "get_virtualization_alerts_history",
    "description": "GET /virtualization-alerts/history",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_alerts_history",
    "description": "POST /virtualization-alerts/history/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_virtualization_faults_history",
    "description": "GET /virtualization-faults/history",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_faults_history",
    "description": "POST /virtualization-faults/history/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "resolve_or_ignore_virtualization_faults",
    "description": "POST /virtualization-faults/resolveOrIgnore",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "ignore": {
          "type": "boolean",
          "description": "Parameter ignore of type bool"
        },
        "fault_ids": {
          "type": "string",
          "description": "Parameter fault_ids of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "resolve_all_virtualization_faults",
    "description": "POST /virtualization-faults/{engineId}/resolveAll",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "resolve_virtualization_fault",
    "description": "POST /virtualization-fault/{faultId}/resolve",
    "parameters": {
      "type": "object",
      "properties": {
        "faultId": {
          "type": "string",
          "description": "Parameter faultId of type str"
        },
        "ignore": {
          "type": "boolean",
          "description": "Parameter ignore of type bool",
          "default": ""
        },
        "resolution_comments": {
          "type": "string",
          "description": "Parameter resolution_comments of type str"
        }
      },
      "required": [
        "resolution_comments"
      ]
    }
  },
  {
    "name": "get_heldspace_deletion_dependencies",
    "description": "GET /heldspace/{heldspaceId}/deletion-dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "heldspaceId": {
          "type": "string",
          "description": "Parameter heldspaceId of type str"
        }
      },
      "required": [
        "heldspaceId"
      ]
    }
  },
  {
    "name": "delete_heldspace_by_id",
    "description": "POST /heldspace/{heldspaceId}/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "heldspaceId": {
          "type": "string",
          "description": "Parameter heldspaceId of type str"
        }
      },
      "required": [
        "heldspaceId"
      ]
    }
  },
  {
    "name": "list_hook_templates",
    "description": "GET /hook-templates",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_hook_template",
    "description": "POST /hook-templates",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "command": {
          "type": "string",
          "description": "Parameter command of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "shell": {
          "type": "string",
          "description": "Parameter shell of type str",
          "default": ""
        },
        "credentials_env_vars": {
          "type": "string",
          "description": "Parameter credentials_env_vars of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "credentials_env_vars",
        "tags"
      ]
    }
  },
  {
    "name": "get_hook_template_by_id",
    "description": "GET /hook-templates/{hookTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str"
        }
      },
      "required": [
        "hookTemplateId"
      ]
    }
  },
  {
    "name": "delete_hook_template",
    "description": "DELETE /hook-templates/{hookTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str"
        }
      },
      "required": [
        "hookTemplateId"
      ]
    }
  },
  {
    "name": "update_hook_template",
    "description": "PATCH /hook-templates/{hookTemplateId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "shell": {
          "type": "string",
          "description": "Parameter shell of type str",
          "default": ""
        },
        "command": {
          "type": "string",
          "description": "Parameter command of type str",
          "default": ""
        },
        "credentials_env_vars": {
          "type": "string",
          "description": "Parameter credentials_env_vars of type str"
        }
      },
      "required": [
        "credentials_env_vars"
      ]
    }
  },
  {
    "name": "search_hook_templates",
    "description": "POST /hook-templates/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hook_template_tags",
    "description": "GET /hook-templates/{hookTemplateId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str"
        }
      },
      "required": [
        "hookTemplateId"
      ]
    }
  },
  {
    "name": "create_hook_template_tags",
    "description": "POST /hook-templates/{hookTemplateId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "hookTemplateId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_hook_template_tags",
    "description": "POST /hook-templates/{hookTemplateId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "hookTemplateId": {
          "type": "string",
          "description": "Parameter hookTemplateId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_registered_engines",
    "description": "GET /management/engines",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "register_engine",
    "description": "POST /management/engines",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "masking_username": {
          "type": "string",
          "description": "Parameter masking_username of type str",
          "default": ""
        },
        "masking_password": {
          "type": "string",
          "description": "Parameter masking_password of type str",
          "default": ""
        },
        "hashicorp_vault_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_masking_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_password_command_args of type str"
        },
        "hashicorp_vault_masking_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_password_command_args of type str"
        },
        "hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter hashicorp_vault_id of type int"
        },
        "masking_hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter masking_hashicorp_vault_id of type int"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool",
          "default": ""
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool",
          "default": ""
        },
        "auto_tagging_config": {
          "type": "string",
          "description": "Parameter auto_tagging_config of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "auto_tagging_config",
        "tags"
      ]
    }
  },
  {
    "name": "get_jobs",
    "description": "GET /jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_jobs",
    "description": "POST /jobs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_job_by_id",
    "description": "GET /jobs/{jobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str"
        }
      },
      "required": [
        "jobId"
      ]
    }
  },
  {
    "name": "abandon_job",
    "description": "Abandoning a job means that the system will no longer track ongoing progress. The system will not attempt to stop the process in any way. The job will be moved to the ABANDONED terminal state.",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str"
        }
      },
      "required": [
        "jobId"
      ]
    }
  },
  {
    "name": "get_job_result",
    "description": "Get job result.",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str"
        }
      },
      "required": [
        "jobId"
      ]
    }
  },
  {
    "name": "get_job_tags",
    "description": "GET /jobs/{jobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str"
        }
      },
      "required": [
        "jobId"
      ]
    }
  },
  {
    "name": "create_job_tags",
    "description": "POST /jobs/{jobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "jobId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_job_tag",
    "description": "POST /jobs/{jobId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Parameter jobId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_registered_engine",
    "description": "GET /management/engines/{engineId}",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "update_registered_engine",
    "description": "PUT /management/engines/{engineId}",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str",
          "default": ""
        },
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "uuid": {
          "type": "string",
          "description": "Parameter uuid of type str",
          "default": ""
        },
        "type": {
          "type": "string",
          "description": "Parameter type of type str",
          "default": ""
        },
        "version": {
          "type": "string",
          "description": "Parameter version of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "ssh_public_key": {
          "type": "string",
          "description": "Parameter ssh_public_key of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str"
        },
        "cpu_core_count": {
          "type": "integer",
          "description": "Parameter cpu_core_count of type int"
        },
        "memory_size": {
          "type": "integer",
          "description": "Parameter memory_size of type int"
        },
        "data_storage_capacity": {
          "type": "integer",
          "description": "Parameter data_storage_capacity of type int"
        },
        "data_storage_used": {
          "type": "integer",
          "description": "Parameter data_storage_used of type int"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool"
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool",
          "default": ""
        },
        "status": {
          "type": "string",
          "description": "Parameter status of type str",
          "default": ""
        },
        "connection_status": {
          "type": "string",
          "description": "Parameter connection_status of type str",
          "default": ""
        },
        "engine_connection_status": {
          "type": "string",
          "description": "Parameter engine_connection_status of type str",
          "default": ""
        },
        "connection_status_details": {
          "type": "string",
          "description": "Parameter connection_status_details of type str",
          "default": ""
        },
        "engine_connection_status_details": {
          "type": "string",
          "description": "Parameter engine_connection_status_details of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "masking_username": {
          "type": "string",
          "description": "Parameter masking_username of type str",
          "default": ""
        },
        "masking_password": {
          "type": "string",
          "description": "Parameter masking_password of type str",
          "default": ""
        },
        "hashicorp_vault_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_masking_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_password_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_masking_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_password_command_args of type str"
        },
        "masking_hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter masking_hashicorp_vault_id of type int"
        },
        "hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter hashicorp_vault_id of type int",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "masking_memory_used": {
          "type": "integer",
          "description": "Parameter masking_memory_used of type int"
        },
        "masking_allocated_memory": {
          "type": "integer",
          "description": "Parameter masking_allocated_memory of type int"
        },
        "masking_jobs_running": {
          "type": "integer",
          "description": "Parameter masking_jobs_running of type int"
        },
        "masking_max_concurrent_jobs": {
          "type": "integer",
          "description": "Parameter masking_max_concurrent_jobs of type int"
        },
        "masking_available_cores": {
          "type": "integer",
          "description": "Parameter masking_available_cores of type int",
          "default": ""
        },
        "hyperscale_instance_ids": {
          "type": "string",
          "description": "Parameter hyperscale_instance_ids of type str",
          "default": ""
        },
        "hyperscale_truststore_filename": {
          "type": "string",
          "description": "Parameter hyperscale_truststore_filename of type str",
          "default": ""
        },
        "hyperscale_truststore_password": {
          "type": "string",
          "description": "Parameter hyperscale_truststore_password of type str"
        }
      },
      "required": [
        "hyperscale_truststore_password"
      ]
    }
  },
  {
    "name": "unregister_engine",
    "description": "DELETE /management/engines/{engineId}",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "update_registered_engine_partial",
    "description": "PATCH /management/engines/{engineId}",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str",
          "default": ""
        },
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "uuid": {
          "type": "string",
          "description": "Parameter uuid of type str",
          "default": ""
        },
        "type": {
          "type": "string",
          "description": "Parameter type of type str",
          "default": ""
        },
        "version": {
          "type": "string",
          "description": "Parameter version of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "ssh_public_key": {
          "type": "string",
          "description": "Parameter ssh_public_key of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str"
        },
        "cpu_core_count": {
          "type": "integer",
          "description": "Parameter cpu_core_count of type int"
        },
        "memory_size": {
          "type": "integer",
          "description": "Parameter memory_size of type int"
        },
        "data_storage_capacity": {
          "type": "integer",
          "description": "Parameter data_storage_capacity of type int"
        },
        "data_storage_used": {
          "type": "integer",
          "description": "Parameter data_storage_used of type int"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool"
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool",
          "default": ""
        },
        "status": {
          "type": "string",
          "description": "Parameter status of type str",
          "default": ""
        },
        "connection_status": {
          "type": "string",
          "description": "Parameter connection_status of type str",
          "default": ""
        },
        "engine_connection_status": {
          "type": "string",
          "description": "Parameter engine_connection_status of type str",
          "default": ""
        },
        "connection_status_details": {
          "type": "string",
          "description": "Parameter connection_status_details of type str",
          "default": ""
        },
        "engine_connection_status_details": {
          "type": "string",
          "description": "Parameter engine_connection_status_details of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "masking_username": {
          "type": "string",
          "description": "Parameter masking_username of type str",
          "default": ""
        },
        "masking_password": {
          "type": "string",
          "description": "Parameter masking_password of type str",
          "default": ""
        },
        "hashicorp_vault_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_masking_username_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_username_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_password_command_args of type str",
          "default": ""
        },
        "hashicorp_vault_masking_password_command_args": {
          "type": "string",
          "description": "Parameter hashicorp_vault_masking_password_command_args of type str"
        },
        "masking_hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter masking_hashicorp_vault_id of type int"
        },
        "hashicorp_vault_id": {
          "type": "integer",
          "description": "Parameter hashicorp_vault_id of type int",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "masking_memory_used": {
          "type": "integer",
          "description": "Parameter masking_memory_used of type int"
        },
        "masking_allocated_memory": {
          "type": "integer",
          "description": "Parameter masking_allocated_memory of type int"
        },
        "masking_jobs_running": {
          "type": "integer",
          "description": "Parameter masking_jobs_running of type int"
        },
        "masking_max_concurrent_jobs": {
          "type": "integer",
          "description": "Parameter masking_max_concurrent_jobs of type int"
        },
        "masking_available_cores": {
          "type": "integer",
          "description": "Parameter masking_available_cores of type int",
          "default": ""
        },
        "hyperscale_instance_ids": {
          "type": "string",
          "description": "Parameter hyperscale_instance_ids of type str",
          "default": ""
        },
        "hyperscale_truststore_filename": {
          "type": "string",
          "description": "Parameter hyperscale_truststore_filename of type str",
          "default": ""
        },
        "hyperscale_truststore_password": {
          "type": "string",
          "description": "Parameter hyperscale_truststore_password of type str"
        }
      },
      "required": [
        "hyperscale_truststore_password"
      ]
    }
  },
  {
    "name": "get_engine_auto_tagging_config",
    "description": "GET /management/engines/{engineId}/auto-tagging",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "update_engine_auto_tagging_config",
    "description": "PATCH /management/engines/{engineId}/auto-tagging",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        },
        "enable_virtualization_dataset_groups": {
          "type": "boolean",
          "description": "Parameter enable_virtualization_dataset_groups of type bool"
        },
        "enable_masking_environments": {
          "type": "boolean",
          "description": "Parameter enable_masking_environments of type bool"
        },
        "enable_masking_applications": {
          "type": "boolean",
          "description": "Parameter enable_masking_applications of type bool"
        },
        "enable_engine_name": {
          "type": "boolean",
          "description": "Parameter enable_engine_name of type bool",
          "default": ""
        },
        "custom_tags_to_add": {
          "type": "string",
          "description": "Parameter custom_tags_to_add of type str",
          "default": ""
        },
        "custom_tags_to_remove": {
          "type": "string",
          "description": "Parameter custom_tags_to_remove of type str"
        }
      },
      "required": [
        "custom_tags_to_remove"
      ]
    }
  },
  {
    "name": "get_compliance_application_settings",
    "description": "GET /management/engines/{engineId}/compliance-application-settings",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_compliance_application_settings",
    "description": "POST /management/engines/{engineId}/compliance-application-settings/search",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "search_engines",
    "description": "POST /management/engines/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_engine_tags",
    "description": "GET /management/engines/{engineId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        }
      },
      "required": [
        "engineId"
      ]
    }
  },
  {
    "name": "create_engine_tags",
    "description": "POST /management/engines/{engineId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "engineId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_engine_tags",
    "description": "POST /management/engines/{engineId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string",
          "description": "Parameter engineId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_hashicorp_vaults",
    "description": "GET /management/vaults/hashicorp",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_hashicorp_vault",
    "description": "POST /management/vaults/hashicorp",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Parameter id of type int"
        },
        "env_variables": {
          "type": "string",
          "description": "Parameter env_variables of type str",
          "default": ""
        },
        "login_command_args": {
          "type": "string",
          "description": "Parameter login_command_args of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_hashicorp_vaults",
    "description": "POST /management/vaults/hashicorp/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hashicorp_vault",
    "description": "GET /management/vaults/hashicorp/{vaultId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "Parameter vaultId of type str"
        }
      },
      "required": [
        "vaultId"
      ]
    }
  },
  {
    "name": "delete_hashicorp_vault",
    "description": "DELETE /management/vaults/hashicorp/{vaultId}",
    "parameters": {
      "type": "object",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "Parameter vaultId of type str"
        }
      },
      "required": [
        "vaultId"
      ]
    }
  },
  {
    "name": "get_hashicorp_vault_tags",
    "description": "GET /management/vaults/hashicorp/{vaultId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "Parameter vaultId of type str"
        }
      },
      "required": [
        "vaultId"
      ]
    }
  },
  {
    "name": "create_hashicorp_vault_tags",
    "description": "POST /management/vaults/hashicorp/{vaultId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "Parameter vaultId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "vaultId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_hashicorp_vault_tag",
    "description": "POST /management/vaults/hashicorp/{vaultId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "vaultId": {
          "type": "string",
          "description": "Parameter vaultId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_accounts",
    "description": "GET /management/accounts",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_account",
    "description": "POST /management/accounts",
    "parameters": {
      "type": "object",
      "properties": {
        "is_admin": {
          "type": "boolean",
          "description": "Parameter is_admin of type bool"
        },
        "generate_api_key": {
          "type": "boolean",
          "description": "Parameter generate_api_key of type bool"
        },
        "api_client_id": {
          "type": "string",
          "description": "Parameter api_client_id of type str",
          "default": ""
        },
        "first_name": {
          "type": "string",
          "description": "Parameter first_name of type str",
          "default": ""
        },
        "last_name": {
          "type": "string",
          "description": "Parameter last_name of type str",
          "default": ""
        },
        "email": {
          "type": "string",
          "description": "Parameter email of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "ldap_principal": {
          "type": "string",
          "description": "Parameter ldap_principal of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "api_key_reset",
    "description": "POST /management/accounts/{id}/api-key-reset",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "api_key_delete",
    "description": "DELETE /management/accounts/{id}/api-key-delete",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "api_key_regenerate",
    "description": "POST /management/accounts/api-key-regenerate",
    "parameters": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Parameter token of type str"
        }
      },
      "required": [
        "token"
      ]
    }
  },
  {
    "name": "get_account",
    "description": "GET /management/accounts/{id}",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_account",
    "description": "PUT /management/accounts/{id}",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "api_client_id": {
          "type": "string",
          "description": "Parameter api_client_id of type str",
          "default": ""
        },
        "first_name": {
          "type": "string",
          "description": "Parameter first_name of type str",
          "default": ""
        },
        "last_name": {
          "type": "string",
          "description": "Parameter last_name of type str",
          "default": ""
        },
        "email": {
          "type": "string",
          "description": "Parameter email of type str",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "ldap_principal": {
          "type": "string",
          "description": "Parameter ldap_principal of type str"
        }
      },
      "required": [
        "ldap_principal"
      ]
    }
  },
  {
    "name": "delete_account",
    "description": "DELETE /management/accounts/{id}",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "enable_account",
    "description": "POST /management/accounts/{id}/enable",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "disable",
    "description": "POST /management/accounts/{id}/disable",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "change_account_password",
    "description": "POST /management/accounts/{id}/change_password",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "old_password": {
          "type": "string",
          "description": "Parameter old_password of type str"
        },
        "new_password": {
          "type": "string",
          "description": "Parameter new_password of type str"
        }
      },
      "required": [
        "old_password",
        "new_password"
      ]
    }
  },
  {
    "name": "reset_account_password",
    "description": "POST /management/accounts/{id}/reset_password",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "new_password": {
          "type": "string",
          "description": "Parameter new_password of type str"
        }
      },
      "required": [
        "new_password"
      ]
    }
  },
  {
    "name": "get_account_tags",
    "description": "GET /management/accounts/{id}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "create_account_tags",
    "description": "POST /management/accounts/{id}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "id",
        "tags"
      ]
    }
  },
  {
    "name": "delete_account_tags",
    "description": "POST /management/accounts/{id}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_account_ui_profiles",
    "description": "GET /management/accounts/{id}/ui-profiles",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_password_policies",
    "description": "GET /management/accounts/password-policies",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_password_policies",
    "description": "PATCH /management/accounts/password-policies",
    "parameters": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "min_length": {
          "type": "integer",
          "description": "Parameter min_length of type int"
        },
        "reuse_disallow_limit": {
          "type": "integer",
          "description": "Parameter reuse_disallow_limit of type int"
        },
        "digit": {
          "type": "boolean",
          "description": "Parameter digit of type bool"
        },
        "uppercase_letter": {
          "type": "boolean",
          "description": "Parameter uppercase_letter of type bool"
        },
        "lowercase_letter": {
          "type": "boolean",
          "description": "Parameter lowercase_letter of type bool"
        },
        "special_character": {
          "type": "boolean",
          "description": "Parameter special_character of type bool"
        },
        "disallow_username_as_password": {
          "type": "boolean",
          "description": "Parameter disallow_username_as_password of type bool"
        },
        "maximum_password_attempts": {
          "type": "integer",
          "description": "Parameter maximum_password_attempts of type int"
        }
      },
      "required": []
    }
  },
  {
    "name": "get_license",
    "description": "GET /management/license",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "change_license",
    "description": "POST /management/license/change-license",
    "parameters": {
      "type": "object",
      "properties": {
        "tier": {
          "type": "string",
          "description": "Parameter tier of type str"
        }
      },
      "required": [
        "tier"
      ]
    }
  },
  {
    "name": "list_properties",
    "description": "GET /management/properties",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_properties",
    "description": "PATCH /management/properties",
    "parameters": {
      "type": "object",
      "properties": {
        "disable_username_password": {
          "type": "boolean",
          "description": "Parameter disable_username_password of type bool"
        },
        "phonehome_upload_cadence": {
          "type": "integer",
          "description": "Parameter phonehome_upload_cadence of type int"
        },
        "phonehome_maximum_transfer_size": {
          "type": "integer",
          "description": "Parameter phonehome_maximum_transfer_size of type int"
        },
        "token_expiry_time": {
          "type": "integer",
          "description": "Parameter token_expiry_time of type int"
        },
        "token_maximum_inactivity_time": {
          "type": "integer",
          "description": "Parameter token_maximum_inactivity_time of type int"
        },
        "feature_flags": {
          "type": "string",
          "description": "Parameter feature_flags of type str",
          "default": ""
        },
        "api_key_expiry_time": {
          "type": "integer",
          "description": "Parameter api_key_expiry_time of type int"
        },
        "allowed_ip_ranges": {
          "type": "string",
          "description": "Parameter allowed_ip_ranges of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_api_classification",
    "description": "GET /management/api-classification",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_api_classification",
    "description": "PUT /management/api-classification",
    "parameters": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Parameter version of type str",
          "default": ""
        },
        "api_classification": {
          "type": "string",
          "description": "Parameter api_classification of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "account_login",
    "description": "POST /login",
    "parameters": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "api_key": {
          "type": "string",
          "description": "Parameter api_key of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "account_logout",
    "description": "POST /logout",
    "parameters": {
      "type": "object",
      "properties": {
        "Authorization": {
          "type": "string",
          "description": "Parameter Authorization of type str"
        }
      },
      "required": [
        "Authorization"
      ]
    }
  },
  {
    "name": "search_accounts",
    "description": "POST /management/accounts/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_tags",
    "description": "GET /management/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_tags",
    "description": "POST /management/tags/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_tag",
    "description": "GET /management/tags/{tagId}",
    "parameters": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Parameter tagId of type str"
        }
      },
      "required": [
        "tagId"
      ]
    }
  },
  {
    "name": "get_tag_usages",
    "description": "GET /management/tags/{tagId}/usages",
    "parameters": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Parameter tagId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_tag_usages",
    "description": "POST /management/tags/{tagId}/usages/search",
    "parameters": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Parameter tagId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_tag_permissions",
    "description": "GET /management/tags/{tagId}/permissions",
    "parameters": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Parameter tagId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_tag_permissions",
    "description": "POST /management/tags/{tagId}/permissions/search",
    "parameters": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Parameter tagId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "token_info",
    "description": "POST /token-info",
    "parameters": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Parameter token of type str"
        }
      },
      "required": [
        "token"
      ]
    }
  },
  {
    "name": "checkSaml",
    "description": "GET /is-saml-enabled",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_smtp_config",
    "description": "GET /management/smtp",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_smtp_config",
    "description": "PUT /management/smtp",
    "parameters": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "server": {
          "type": "string",
          "description": "Parameter server of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int"
        },
        "authentication_enabled": {
          "type": "boolean",
          "description": "Parameter authentication_enabled of type bool"
        },
        "tls_enabled": {
          "type": "boolean",
          "description": "Parameter tls_enabled of type bool"
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "from_address": {
          "type": "string",
          "description": "Parameter from_address of type str",
          "default": ""
        },
        "send_timeout": {
          "type": "integer",
          "description": "Parameter send_timeout of type int"
        }
      },
      "required": []
    }
  },
  {
    "name": "validate_smtp_config",
    "description": "POST /management/smtp/validate",
    "parameters": {
      "type": "object",
      "properties": {
        "to_address": {
          "type": "string",
          "description": "Parameter to_address of type str"
        }
      },
      "required": [
        "to_address"
      ]
    }
  },
  {
    "name": "get_metadata_database",
    "description": "GET /management/metadata-database",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_ldap_config",
    "description": "GET /management/ldap-config",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_ldap_config",
    "description": "PUT /management/ldap-config",
    "parameters": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "auto_create_users": {
          "type": "boolean",
          "description": "Parameter auto_create_users of type bool"
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int"
        },
        "domains": {
          "type": "string",
          "description": "Parameter domains of type str",
          "default": ""
        },
        "enable_ssl": {
          "type": "boolean",
          "description": "Parameter enable_ssl of type bool"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool"
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool"
        }
      },
      "required": []
    }
  },
  {
    "name": "validate_ldap_config",
    "description": "POST /management/ldap-config/validate",
    "parameters": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_saml_config",
    "description": "GET /management/saml-config",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_saml_config",
    "description": "PUT /management/saml-config",
    "parameters": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "auto_create_users": {
          "type": "boolean",
          "description": "Parameter auto_create_users of type bool"
        },
        "metadata": {
          "type": "string",
          "description": "Parameter metadata of type str",
          "default": ""
        },
        "entity_id": {
          "type": "string",
          "description": "Parameter entity_id of type str",
          "default": ""
        },
        "response_skew": {
          "type": "integer",
          "description": "Parameter response_skew of type int"
        },
        "group_attr": {
          "type": "string",
          "description": "Parameter group_attr of type str",
          "default": ""
        },
        "first_name_attr": {
          "type": "string",
          "description": "Parameter first_name_attr of type str",
          "default": ""
        },
        "last_name_attr": {
          "type": "string",
          "description": "Parameter last_name_attr of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_phonehome_events",
    "description": "GET /management/phonehome/events",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        }
      },
      "required": []
    }
  },
  {
    "name": "trigger_phonehome_bundle_upload",
    "description": "POST /management/phonehome/upload",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_proxy_configuration",
    "description": "GET /management/proxy",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "update_proxy_configuration",
    "description": "PUT /management/proxy",
    "parameters": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Parameter host of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str"
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str"
        }
      },
      "required": [
        "enabled",
        "username",
        "password"
      ]
    }
  },
  {
    "name": "get_product_registration_delphix_connectivity_check",
    "description": "GET /management/product-registration-delphix-connectivity-check",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_product_registration_status",
    "description": "GET /management/product-registration-status",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_product_registration_key",
    "description": "GET /management/product-registration-offline",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "register_product_offline",
    "description": "POST /management/product-registration-offline",
    "parameters": {
      "type": "object",
      "properties": {
        "data_key": {
          "type": "string",
          "description": "Parameter data_key of type str"
        },
        "authentication_token": {
          "type": "string",
          "description": "Parameter authentication_token of type str"
        }
      },
      "required": [
        "data_key",
        "authentication_token"
      ]
    }
  },
  {
    "name": "unregister_product",
    "description": "DELETE /management/product-registration-offline",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "register_product_online",
    "description": "POST /management/product-registration-online",
    "parameters": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Parameter token of type str"
        }
      },
      "required": [
        "token"
      ]
    }
  },
  {
    "name": "update_phonehome_service_url",
    "description": "PATCH /management/product-registration-online",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_audit_logs_summary_report",
    "description": "GET /reporting/audit-logs-summary-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_virtualization_storage_summary_report",
    "description": "GET /reporting/virtualization-storage-summary-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_virtualization_storage_summary_report",
    "description": "POST /reporting/virtualization-storage-summary-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_api_usage_report",
    "description": "GET /reporting/api-usage-report",
    "parameters": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "description": "Parameter start_date of type str",
          "default": ""
        },
        "end_date": {
          "type": "string",
          "description": "Parameter end_date of type str",
          "default": ""
        },
        "api_metric_kind": {
          "type": "string",
          "description": "Parameter api_metric_kind of type str",
          "default": ""
        },
        "group_by": {
          "type": "string",
          "description": "Parameter group_by of type str",
          "default": ""
        },
        "client_name": {
          "type": "string",
          "description": "Parameter client_name of type str",
          "default": ""
        },
        "user_agent": {
          "type": "string",
          "description": "Parameter user_agent of type str",
          "default": ""
        },
        "dct_version": {
          "type": "string",
          "description": "Parameter dct_version of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_reporting_schedules",
    "description": "GET /reporting/schedule",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_reporting_schedule",
    "description": "POST /reporting/schedule",
    "parameters": {
      "type": "object",
      "properties": {
        "report_type": {
          "type": "string",
          "description": "Parameter report_type of type str",
          "default": ""
        },
        "cron_expression": {
          "type": "string",
          "description": "Parameter cron_expression of type str",
          "default": ""
        },
        "message": {
          "type": "string",
          "description": "Parameter message of type str"
        },
        "file_format": {
          "type": "string",
          "description": "Parameter file_format of type str"
        },
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "recipients": {
          "type": "string",
          "description": "Parameter recipients of type str"
        },
        "time_zone": {
          "type": "string",
          "description": "Parameter time_zone of type str"
        },
        "sort_column": {
          "type": "string",
          "description": "Parameter sort_column of type str"
        },
        "row_count": {
          "type": "integer",
          "description": "Parameter row_count of type int"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "enabled",
        "recipients",
        "time_zone",
        "sort_column",
        "row_count",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "search_reporting_schedules",
    "description": "POST /reporting/schedule/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_reporting_schedule_by_id",
    "description": "GET /reporting/schedule/{reportId}",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str"
        }
      },
      "required": [
        "reportId"
      ]
    }
  },
  {
    "name": "update_reporting_schedule",
    "description": "PUT /reporting/schedule/{reportId}",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str"
        },
        "report_type": {
          "type": "string",
          "description": "Parameter report_type of type str",
          "default": ""
        },
        "cron_expression": {
          "type": "string",
          "description": "Parameter cron_expression of type str",
          "default": ""
        },
        "message": {
          "type": "string",
          "description": "Parameter message of type str",
          "default": ""
        },
        "file_format": {
          "type": "string",
          "description": "Parameter file_format of type str"
        },
        "enabled": {
          "type": "boolean",
          "description": "Parameter enabled of type bool"
        },
        "recipients": {
          "type": "string",
          "description": "Parameter recipients of type str"
        },
        "report_id": {
          "type": "integer",
          "description": "Parameter report_id of type int"
        },
        "time_zone": {
          "type": "string",
          "description": "Parameter time_zone of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "sort_column": {
          "type": "string",
          "description": "Parameter sort_column of type str"
        },
        "row_count": {
          "type": "integer",
          "description": "Parameter row_count of type int"
        }
      },
      "required": [
        "enabled",
        "recipients",
        "report_id",
        "time_zone",
        "tags",
        "sort_column",
        "row_count"
      ]
    }
  },
  {
    "name": "delete_reporting_schedule",
    "description": "DELETE /reporting/schedule/{reportId}",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str"
        }
      },
      "required": [
        "reportId"
      ]
    }
  },
  {
    "name": "get_reporting_schedule_tags",
    "description": "GET /reporting/schedule/{reportId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str"
        }
      },
      "required": [
        "reportId"
      ]
    }
  },
  {
    "name": "create_reporting_schedule_tags",
    "description": "POST /reporting/schedule/{reportId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "reportId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_reporting_schedule_tag",
    "description": "POST /reporting/schedule/{reportId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "description": "Parameter reportId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_engine_performance_analytics_report",
    "description": "GET /reporting/engine-performance-analytic-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_engine_performance_analytics_report",
    "description": "POST /reporting/engine-performance-analytic-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_engine_performance_analytic_trends",
    "description": "POST /reporting/engine-performance-analytic-trends/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_product_info",
    "description": "GET /reporting/product_info",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_data_connections",
    "description": "GET /data-connections",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_data_connections",
    "description": "POST /data-connections/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_data_connection_by_id",
    "description": "GET /data-connections/{dataConnectionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str"
        }
      },
      "required": [
        "dataConnectionId"
      ]
    }
  },
  {
    "name": "update_data_connection",
    "description": "PATCH /data-connections/{dataConnectionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "get_data_connection_tags",
    "description": "GET /data-connections/{dataConnectionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str"
        }
      },
      "required": [
        "dataConnectionId"
      ]
    }
  },
  {
    "name": "create_data_connection_tags",
    "description": "POST /data-connections/{dataConnectionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "dataConnectionId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_data_connection_tags",
    "description": "POST /data-connections/{dataConnectionId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_sub_connections",
    "description": "GET /data-connections/{dataConnectionId}/sub-connections",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "reassign_sub_connection",
    "description": "POST /data-connections/{dataConnectionId}/sub-connections/{subConnectionId}/reassign",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str",
          "default": ""
        },
        "subConnectionId": {
          "type": "string",
          "description": "Parameter subConnectionId of type str",
          "default": ""
        },
        "new_data_connection_id": {
          "type": "string",
          "description": "Parameter new_data_connection_id of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "tags",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "search_sub_connections",
    "description": "POST /data-connections/{dataConnectionId}/sub-connections/search",
    "parameters": {
      "type": "object",
      "properties": {
        "dataConnectionId": {
          "type": "string",
          "description": "Parameter dataConnectionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_roles",
    "description": "GET /roles",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_role",
    "description": "POST /roles",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "permission_objects": {
          "type": "string",
          "description": "Parameter permission_objects of type str"
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "immutable": {
          "type": "boolean",
          "description": "Parameter immutable of type bool",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "ui_profiles": {
          "type": "string",
          "description": "Parameter ui_profiles of type str"
        }
      },
      "required": [
        "tags",
        "ui_profiles"
      ]
    }
  },
  {
    "name": "get_role_by_id",
    "description": "GET /roles/{roleId}",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        }
      },
      "required": [
        "roleId"
      ]
    }
  },
  {
    "name": "delete_role",
    "description": "DELETE /roles/{roleId}",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        }
      },
      "required": [
        "roleId"
      ]
    }
  },
  {
    "name": "update_role",
    "description": "PATCH /roles/{roleId}",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        }
      },
      "required": [
        "description"
      ]
    }
  },
  {
    "name": "search_roles",
    "description": "POST /roles/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "add_role_permissions",
    "description": "POST /roles/{roleId}/permissions",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        },
        "permission_objects": {
          "type": "string",
          "description": "Parameter permission_objects of type str"
        }
      },
      "required": [
        "roleId",
        "permission_objects"
      ]
    }
  },
  {
    "name": "remove_role_permissions",
    "description": "POST /roles/{roleId}/permissions/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        },
        "permission_objects": {
          "type": "string",
          "description": "Parameter permission_objects of type str"
        }
      },
      "required": [
        "roleId",
        "permission_objects"
      ]
    }
  },
  {
    "name": "get_role_tags",
    "description": "GET /roles/{roleId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        }
      },
      "required": [
        "roleId"
      ]
    }
  },
  {
    "name": "create_role_tags",
    "description": "POST /roles/{roleId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "roleId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_role_tag",
    "description": "POST /roles/{roleId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "add_role_ui_profiles",
    "description": "POST /roles/{roleId}/ui-profiles",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        },
        "ui_profiles": {
          "type": "string",
          "description": "Parameter ui_profiles of type str"
        }
      },
      "required": [
        "roleId",
        "ui_profiles"
      ]
    }
  },
  {
    "name": "delete_role_ui_profiles",
    "description": "POST /roles/{roleId}/ui-profiles/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Parameter roleId of type str"
        },
        "ui_profiles": {
          "type": "string",
          "description": "Parameter ui_profiles of type str"
        }
      },
      "required": [
        "roleId",
        "ui_profiles"
      ]
    }
  },
  {
    "name": "get_object_permissions",
    "description": "GET /auth/permissions/objects/{objectType}/{objectId}",
    "parameters": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Parameter objectType of type str"
        },
        "objectId": {
          "type": "string",
          "description": "Parameter objectId of type str"
        }
      },
      "required": [
        "objectType",
        "objectId"
      ]
    }
  },
  {
    "name": "get_all_object_permissions",
    "description": "GET /auth/object-permissions",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_access_groups",
    "description": "GET /access-groups",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_access_group",
    "description": "POST /access-groups",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "id": {
          "type": "string",
          "description": "Parameter id of type str"
        },
        "single_account": {
          "type": "boolean",
          "description": "Parameter single_account of type bool",
          "default": ""
        },
        "account_ids": {
          "type": "string",
          "description": "Parameter account_ids of type str",
          "default": ""
        },
        "tagged_account_ids": {
          "type": "string",
          "description": "Parameter tagged_account_ids of type str",
          "default": ""
        },
        "account_tags": {
          "type": "string",
          "description": "Parameter account_tags of type str",
          "default": ""
        },
        "scopes": {
          "type": "string",
          "description": "Parameter scopes of type str"
        }
      },
      "required": [
        "scopes"
      ]
    }
  },
  {
    "name": "search_access_groups",
    "description": "POST /access-groups/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_access_group_by_id",
    "description": "GET /access-groups/{accessGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        }
      },
      "required": [
        "accessGroupId"
      ]
    }
  },
  {
    "name": "delete_access_group",
    "description": "DELETE /access-groups/{accessGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        }
      },
      "required": [
        "accessGroupId"
      ]
    }
  },
  {
    "name": "update_access_group",
    "description": "PATCH /access-groups/{accessGroupId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "add_access_group_account_tags",
    "description": "POST /access-groups/{accessGroupId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "accessGroupId",
        "tags"
      ]
    }
  },
  {
    "name": "remove_access_group_account_tags",
    "description": "POST /access-groups/{accessGroupId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "add_access_group_account_ids",
    "description": "POST /access-groups/{accessGroupId}/account-ids",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "account_ids": {
          "type": "string",
          "description": "Parameter account_ids of type str"
        }
      },
      "required": [
        "accessGroupId",
        "account_ids"
      ]
    }
  },
  {
    "name": "remove_access_group_account_id",
    "description": "DELETE /access-groups/{accessGroupId}/account-ids/{accountId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "accountId": {
          "type": "string",
          "description": "Parameter accountId of type str"
        }
      },
      "required": [
        "accessGroupId",
        "accountId"
      ]
    }
  },
  {
    "name": "add_access_group_scopes",
    "description": "POST /access-groups/{accessGroupId}/scopes",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopes": {
          "type": "string",
          "description": "Parameter scopes of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopes"
      ]
    }
  },
  {
    "name": "get_access_group_scope",
    "description": "GET /access-groups/{accessGroupId}/scopes/{scopeId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId"
      ]
    }
  },
  {
    "name": "remove_access_group_scope",
    "description": "DELETE /access-groups/{accessGroupId}/scopes/{scopeId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId"
      ]
    }
  },
  {
    "name": "update_access_group_scope",
    "description": "PATCH /access-groups/{accessGroupId}/scopes/{scopeId}",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str",
          "default": ""
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "scope_type": {
          "type": "string",
          "description": "Parameter scope_type of type str"
        }
      },
      "required": [
        "name",
        "scope_type"
      ]
    }
  },
  {
    "name": "add_tags_to_scope",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_access_group_scope_object_tags",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str",
          "default": ""
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "scopeId",
        "tags"
      ]
    }
  },
  {
    "name": "add_objects_to_access_group_scope",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/objects",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "objects": {
          "type": "string",
          "description": "Parameter objects of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId",
        "objects"
      ]
    }
  },
  {
    "name": "delete_access_group_scope_objects",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/objects/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "objects": {
          "type": "string",
          "description": "Parameter objects of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId",
        "objects"
      ]
    }
  },
  {
    "name": "add_always_allowed_permissions",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "always_allowed_permissions": {
          "type": "string",
          "description": "Parameter always_allowed_permissions of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId",
        "always_allowed_permissions"
      ]
    }
  },
  {
    "name": "remove_always_allowed_permissions",
    "description": "POST /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "Parameter accessGroupId of type str"
        },
        "scopeId": {
          "type": "string",
          "description": "Parameter scopeId of type str"
        },
        "always_allowed_permissions": {
          "type": "string",
          "description": "Parameter always_allowed_permissions of type str"
        }
      },
      "required": [
        "accessGroupId",
        "scopeId",
        "always_allowed_permissions"
      ]
    }
  },
  {
    "name": "get_enabled_features_flag",
    "description": "GET /enabled-features-flag",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "connectors_test",
    "description": "POST /connectors/{connectorId}/test",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        }
      },
      "required": [
        "connectorId"
      ]
    }
  },
  {
    "name": "get_hyperscale_instances",
    "description": "GET /hyperscale-instances",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "register_hyperscale_instance",
    "description": "POST /hyperscale-instances",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str"
        },
        "api_key": {
          "type": "string",
          "description": "Parameter api_key of type str",
          "default": ""
        },
        "data_type": {
          "type": "string",
          "description": "Parameter data_type of type str"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool"
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "insecure_ssl",
        "unsafe_ssl_hostname_check",
        "tags",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "search_hyperscale_instances",
    "description": "POST /hyperscale-instances/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hyperscale_instance_by_id",
    "description": "GET /hyperscale-instances/{hyperscaleInstanceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str"
        }
      },
      "required": [
        "hyperscaleInstanceId"
      ]
    }
  },
  {
    "name": "unregister_hyperscale_instance",
    "description": "DELETE /hyperscale-instances/{hyperscaleInstanceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str"
        }
      },
      "required": [
        "hyperscaleInstanceId"
      ]
    }
  },
  {
    "name": "update_hyperscale_instance",
    "description": "PATCH /hyperscale-instances/{hyperscaleInstanceId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "api_key": {
          "type": "string",
          "description": "Parameter api_key of type str",
          "default": ""
        },
        "data_type": {
          "type": "string",
          "description": "Parameter data_type of type str"
        },
        "insecure_ssl": {
          "type": "boolean",
          "description": "Parameter insecure_ssl of type bool"
        },
        "unsafe_ssl_hostname_check": {
          "type": "boolean",
          "description": "Parameter unsafe_ssl_hostname_check of type bool"
        }
      },
      "required": [
        "unsafe_ssl_hostname_check"
      ]
    }
  },
  {
    "name": "get_hyperscale_instance_tags",
    "description": "GET /hyperscale-instances/{hyperscaleInstanceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str"
        }
      },
      "required": [
        "hyperscaleInstanceId"
      ]
    }
  },
  {
    "name": "create_hyperscale_instance_tags",
    "description": "POST /hyperscale-instances/{hyperscaleInstanceId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "hyperscaleInstanceId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_hyperscale_instance_tags",
    "description": "POST /hyperscale-instances/{hyperscaleInstanceId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "sync_engines_hyperscale_instance",
    "description": "POST /hyperscale-instances/{hyperscaleInstanceId}/sync-engines",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str"
        },
        "source_engine_id": {
          "type": "string",
          "description": "Parameter source_engine_id of type str"
        },
        "target_engine_ids": {
          "type": "string",
          "description": "Parameter target_engine_ids of type str"
        }
      },
      "required": [
        "hyperscaleInstanceId",
        "source_engine_id",
        "target_engine_ids"
      ]
    }
  },
  {
    "name": "add_engine_to_hyperscale_instance",
    "description": "POST /hyperscale-instances/{hyperscaleInstanceId}/add-engine",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "engine_id"
      ]
    }
  },
  {
    "name": "remove_engine_from_hyperscale_instance",
    "description": "POST /hyperscale-instances/{hyperscaleInstanceId}/remove-engine",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleInstanceId": {
          "type": "string",
          "description": "Parameter hyperscaleInstanceId of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "engine_id"
      ]
    }
  },
  {
    "name": "get_hyperscale_mount_points",
    "description": "GET /hyperscale-mount-points",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_hyperscale_mount_point",
    "description": "POST /hyperscale-mount-points",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscale_instance_id": {
          "type": "string",
          "description": "Parameter hyperscale_instance_id of type str",
          "default": ""
        },
        "id": {
          "type": "string",
          "description": "Parameter id of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "mount_path": {
          "type": "string",
          "description": "Parameter mount_path of type str",
          "default": ""
        },
        "mount_type": {
          "type": "string",
          "description": "Parameter mount_type of type str",
          "default": ""
        },
        "options": {
          "type": "string",
          "description": "Parameter options of type str",
          "default": ""
        },
        "staging_storage_type": {
          "type": "string",
          "description": "Parameter staging_storage_type of type str",
          "default": ""
        },
        "auth_mechanism": {
          "type": "string",
          "description": "Parameter auth_mechanism of type str",
          "default": ""
        },
        "aws_bucket_name": {
          "type": "string",
          "description": "Parameter aws_bucket_name of type str",
          "default": ""
        },
        "aws_bucket_region": {
          "type": "string",
          "description": "Parameter aws_bucket_region of type str",
          "default": ""
        },
        "aws_bucket_prefix": {
          "type": "string",
          "description": "Parameter aws_bucket_prefix of type str",
          "default": ""
        },
        "aws_bucket_delimiter": {
          "type": "string",
          "description": "Parameter aws_bucket_delimiter of type str",
          "default": ""
        },
        "blob_auth_type": {
          "type": "string",
          "description": "Parameter blob_auth_type of type str",
          "default": ""
        },
        "blob_account_name": {
          "type": "string",
          "description": "Parameter blob_account_name of type str",
          "default": ""
        },
        "blob_container_name": {
          "type": "string",
          "description": "Parameter blob_container_name of type str",
          "default": ""
        },
        "blob_container_prefix": {
          "type": "string",
          "description": "Parameter blob_container_prefix of type str",
          "default": ""
        },
        "blob_container_delimiter": {
          "type": "string",
          "description": "Parameter blob_container_delimiter of type str"
        }
      },
      "required": [
        "blob_container_delimiter"
      ]
    }
  },
  {
    "name": "get_hyperscale_mount_point_by_id",
    "description": "GET /hyperscale-mount-points/{hyperscaleMountPointId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleMountPointId": {
          "type": "string",
          "description": "Parameter hyperscaleMountPointId of type str"
        }
      },
      "required": [
        "hyperscaleMountPointId"
      ]
    }
  },
  {
    "name": "delete_hyperscale_mount_point",
    "description": "DELETE /hyperscale-mount-points/{hyperscaleMountPointId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleMountPointId": {
          "type": "string",
          "description": "Parameter hyperscaleMountPointId of type str"
        }
      },
      "required": [
        "hyperscaleMountPointId"
      ]
    }
  },
  {
    "name": "update_hyperscale_mount_point_by_id",
    "description": "PATCH /hyperscale-mount-points/{hyperscaleMountPointId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleMountPointId": {
          "type": "string",
          "description": "Parameter hyperscaleMountPointId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "mount_path": {
          "type": "string",
          "description": "Parameter mount_path of type str",
          "default": ""
        },
        "mount_type": {
          "type": "string",
          "description": "Parameter mount_type of type str",
          "default": ""
        },
        "options": {
          "type": "string",
          "description": "Parameter options of type str"
        }
      },
      "required": [
        "options"
      ]
    }
  },
  {
    "name": "search_hyperscale_mount_points",
    "description": "POST /hyperscale-mount-points/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hyperscale_connectors",
    "description": "GET /hyperscale-connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_hyperscale_connector",
    "description": "POST /hyperscale-connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscale_instance_id": {
          "type": "string",
          "description": "Parameter hyperscale_instance_id of type str",
          "default": ""
        },
        "data_type": {
          "type": "string",
          "description": "Parameter data_type of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "source_username": {
          "type": "string",
          "description": "Parameter source_username of type str",
          "default": ""
        },
        "source_password": {
          "type": "string",
          "description": "Parameter source_password of type str",
          "default": ""
        },
        "source_jdbc_url": {
          "type": "string",
          "description": "Parameter source_jdbc_url of type str",
          "default": ""
        },
        "source_mongo_url": {
          "type": "string",
          "description": "Parameter source_mongo_url of type str",
          "default": ""
        },
        "source_filesystem_path": {
          "type": "string",
          "description": "Parameter source_filesystem_path of type str",
          "default": ""
        },
        "source_connection_properties": {
          "type": "string",
          "description": "Parameter source_connection_properties of type str",
          "default": ""
        },
        "target_username": {
          "type": "string",
          "description": "Parameter target_username of type str",
          "default": ""
        },
        "target_password": {
          "type": "string",
          "description": "Parameter target_password of type str",
          "default": ""
        },
        "target_jdbc_url": {
          "type": "string",
          "description": "Parameter target_jdbc_url of type str",
          "default": ""
        },
        "target_mongo_url": {
          "type": "string",
          "description": "Parameter target_mongo_url of type str",
          "default": ""
        },
        "target_filesystem_path": {
          "type": "string",
          "description": "Parameter target_filesystem_path of type str",
          "default": ""
        },
        "target_connection_properties": {
          "type": "string",
          "description": "Parameter target_connection_properties of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hyperscale_connector_by_id",
    "description": "GET /hyperscale-connectors/{hyperscaleConnectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str"
        }
      },
      "required": [
        "hyperscaleConnectorId"
      ]
    }
  },
  {
    "name": "delete_hyperscale_connector",
    "description": "DELETE /hyperscale-connectors/{hyperscaleConnectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str"
        }
      },
      "required": [
        "hyperscaleConnectorId"
      ]
    }
  },
  {
    "name": "update_hyperscale_connector_by_id",
    "description": "PATCH /hyperscale-connectors/{hyperscaleConnectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "source_username": {
          "type": "string",
          "description": "Parameter source_username of type str",
          "default": ""
        },
        "source_password": {
          "type": "string",
          "description": "Parameter source_password of type str",
          "default": ""
        },
        "source_jdbc_url": {
          "type": "string",
          "description": "Parameter source_jdbc_url of type str",
          "default": ""
        },
        "source_mongo_url": {
          "type": "string",
          "description": "Parameter source_mongo_url of type str",
          "default": ""
        },
        "source_filesystem_path": {
          "type": "string",
          "description": "Parameter source_filesystem_path of type str",
          "default": ""
        },
        "source_connection_properties": {
          "type": "string",
          "description": "Parameter source_connection_properties of type str",
          "default": ""
        },
        "target_username": {
          "type": "string",
          "description": "Parameter target_username of type str",
          "default": ""
        },
        "target_password": {
          "type": "string",
          "description": "Parameter target_password of type str",
          "default": ""
        },
        "target_jdbc_url": {
          "type": "string",
          "description": "Parameter target_jdbc_url of type str",
          "default": ""
        },
        "target_mongo_url": {
          "type": "string",
          "description": "Parameter target_mongo_url of type str",
          "default": ""
        },
        "target_filesystem_path": {
          "type": "string",
          "description": "Parameter target_filesystem_path of type str",
          "default": ""
        },
        "target_connection_properties": {
          "type": "string",
          "description": "Parameter target_connection_properties of type str"
        }
      },
      "required": [
        "target_connection_properties"
      ]
    }
  },
  {
    "name": "get_hyperscale_connector_tags",
    "description": "GET /hyperscale-connectors/{hyperscaleConnectorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str"
        }
      },
      "required": [
        "hyperscaleConnectorId"
      ]
    }
  },
  {
    "name": "create_hyperscale_connector_tags",
    "description": "POST /hyperscale-connectors/{hyperscaleConnectorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "hyperscaleConnectorId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_hyperscale_connector_tags",
    "description": "POST /hyperscale-connectors/{hyperscaleConnectorId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleConnectorId": {
          "type": "string",
          "description": "Parameter hyperscaleConnectorId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_hyperscale_connectors",
    "description": "POST /hyperscale-connectors/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hyperscale_datasets",
    "description": "GET /hyperscale-datasets",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_hyperscale_dataset_by_id",
    "description": "GET /hyperscale-datasets/{hyperscaleDatasetId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str"
        }
      },
      "required": [
        "hyperscaleDatasetId"
      ]
    }
  },
  {
    "name": "update_hyperscale_dataset_by_id",
    "description": "PATCH /hyperscale-datasets/{hyperscaleDatasetId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str",
          "default": ""
        },
        "mount_point_id": {
          "type": "string",
          "description": "Parameter mount_point_id of type str",
          "default": ""
        },
        "connector_id": {
          "type": "string",
          "description": "Parameter connector_id of type str"
        }
      },
      "required": [
        "connector_id"
      ]
    }
  },
  {
    "name": "get_hyperscale_dataset_tags",
    "description": "GET /hyperscale-datasets/{hyperscaleDatasetId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str"
        }
      },
      "required": [
        "hyperscaleDatasetId"
      ]
    }
  },
  {
    "name": "create_hyperscale_dataset_tags",
    "description": "POST /hyperscale-datasets/{hyperscaleDatasetId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "hyperscaleDatasetId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_hyperscale_dataset_tags",
    "description": "POST /hyperscale-datasets/{hyperscaleDatasetId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_hyperscale_dataset_table_or_file_by_id",
    "description": "GET /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/{hyperscaleDatasetTableOrFileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str"
        },
        "hyperscaleDatasetTableOrFileId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetTableOrFileId of type str"
        }
      },
      "required": [
        "hyperscaleDatasetId",
        "hyperscaleDatasetTableOrFileId"
      ]
    }
  },
  {
    "name": "update_hyperscale_dataset_table_or_file_by_id",
    "description": "PATCH /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/{hyperscaleDatasetTableOrFileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str",
          "default": ""
        },
        "hyperscaleDatasetTableOrFileId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetTableOrFileId of type str"
        },
        "filter_key": {
          "type": "string",
          "description": "Parameter filter_key of type str"
        },
        "column_array_rows": {
          "type": "integer",
          "description": "Parameter column_array_rows of type int"
        },
        "unload_split": {
          "type": "integer",
          "description": "Parameter unload_split of type int",
          "default": ""
        },
        "stream_size": {
          "type": "integer",
          "description": "Parameter stream_size of type int",
          "default": ""
        },
        "end_of_record": {
          "type": "string",
          "description": "Parameter end_of_record of type str",
          "default": ""
        },
        "delimiter": {
          "type": "string",
          "description": "Parameter delimiter of type str",
          "default": ""
        },
        "enclosure": {
          "type": "string",
          "description": "Parameter enclosure of type str"
        },
        "enclosure_escape_character": {
          "type": "string",
          "description": "Parameter enclosure_escape_character of type str"
        },
        "escape_enclosure_escape_character": {
          "type": "boolean",
          "description": "Parameter escape_enclosure_escape_character of type bool",
          "default": ""
        },
        "has_headers": {
          "type": "boolean",
          "description": "Parameter has_headers of type bool",
          "default": ""
        },
        "unique_source_files_identifier": {
          "type": "string",
          "description": "Parameter unique_source_files_identifier of type str"
        },
        "source_files": {
          "type": "string",
          "description": "Parameter source_files of type str"
        },
        "perform_join": {
          "type": "boolean",
          "description": "Parameter perform_join of type bool"
        }
      },
      "required": [
        "source_files",
        "perform_join"
      ]
    }
  },
  {
    "name": "get_hyperscale_dataset_tables_or_files",
    "description": "GET /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str"
        }
      },
      "required": [
        "hyperscaleDatasetId"
      ]
    }
  },
  {
    "name": "search_hyperscale_dataset_tables_or_files",
    "description": "POST /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/search",
    "parameters": {
      "type": "object",
      "properties": {
        "hyperscaleDatasetId": {
          "type": "string",
          "description": "Parameter hyperscaleDatasetId of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "search_hyperscale_datasets",
    "description": "POST /hyperscale-datasets/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_execution_metrics_report",
    "description": "GET /reporting/masking-execution-metrics",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_masking_execution_metrics_report",
    "description": "POST /reporting/masking-execution-metrics/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_engine_global_object_state_report",
    "description": "GET /reporting/engine-global-object-state-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_engine_global_object_state_report",
    "description": "POST /reporting/engine-global-object-state-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_data_risk_report",
    "description": "GET /reporting/data-risk-report",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_data_risk_report",
    "description": "POST /reporting/data-risk-report/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_classifiers",
    "description": "GET /classifiers",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_classifiers",
    "description": "POST /classifiers/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_classifier_by_id",
    "description": "GET /classifiers/{classifierId}",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str"
        }
      },
      "required": [
        "classifierId"
      ]
    }
  },
  {
    "name": "get_classifier_discovery_policies",
    "description": "GET /classifiers/{classifierId}/discovery-policies",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_classifier_discovery_policies",
    "description": "POST /classifiers/{classifierId}/discovery-policies/search",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_classifier_tags",
    "description": "GET /classifiers/{classifierId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str"
        }
      },
      "required": [
        "classifierId"
      ]
    }
  },
  {
    "name": "create_classifier_tags",
    "description": "POST /classifiers/{classifierId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "classifierId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_classifier_tags",
    "description": "POST /classifiers/{classifierId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "classifierId": {
          "type": "string",
          "description": "Parameter classifierId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_connectors",
    "description": "GET /connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_connector",
    "description": "POST /connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "type": {
          "type": "string",
          "description": "Parameter type of type str"
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str",
          "default": ""
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "database_type": {
          "type": "string",
          "description": "Parameter database_type of type str",
          "default": ""
        },
        "jdbc_url": {
          "type": "string",
          "description": "Parameter jdbc_url of type str",
          "default": ""
        },
        "schema_name": {
          "type": "string",
          "description": "Parameter schema_name of type str",
          "default": ""
        },
        "sid": {
          "type": "string",
          "description": "Parameter sid of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "tags",
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "get_connector_by_id",
    "description": "GET /connectors/{connectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        }
      },
      "required": [
        "connectorId"
      ]
    }
  },
  {
    "name": "delete_connector",
    "description": "DELETE /connectors/{connectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        }
      },
      "required": [
        "connectorId"
      ]
    }
  },
  {
    "name": "update_connector_by_id",
    "description": "PATCH /connectors/{connectorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "hostname": {
          "type": "string",
          "description": "Parameter hostname of type str"
        },
        "port": {
          "type": "integer",
          "description": "Parameter port of type int",
          "default": ""
        },
        "username": {
          "type": "string",
          "description": "Parameter username of type str",
          "default": ""
        },
        "password": {
          "type": "string",
          "description": "Parameter password of type str",
          "default": ""
        },
        "jdbc_url": {
          "type": "string",
          "description": "Parameter jdbc_url of type str",
          "default": ""
        },
        "schema_name": {
          "type": "string",
          "description": "Parameter schema_name of type str",
          "default": ""
        },
        "sid": {
          "type": "string",
          "description": "Parameter sid of type str"
        }
      },
      "required": [
        "sid"
      ]
    }
  },
  {
    "name": "search_connector_jobs",
    "description": "POST /connectors/{connectorId}/masking-jobs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_connector_tags",
    "description": "GET /connectors/{connectorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        }
      },
      "required": [
        "connectorId"
      ]
    }
  },
  {
    "name": "create_connector_tags",
    "description": "POST /connectors/{connectorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "connectorId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_connector_tag",
    "description": "POST /connectors/{connectorId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "Parameter connectorId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_connectors",
    "description": "POST /connectors/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_data_classes",
    "description": "GET /data-classes",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_data_class",
    "description": "POST /data-classes",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "default_algorithm_id": {
          "type": "string",
          "description": "Parameter default_algorithm_id of type str",
          "default": ""
        },
        "default_token_algorithm_id": {
          "type": "string",
          "description": "Parameter default_token_algorithm_id of type str",
          "default": ""
        },
        "algorithm_ids": {
          "type": "string",
          "description": "Parameter algorithm_ids of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "example": {
          "type": "string",
          "description": "Parameter example of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": []
    }
  },
  {
    "name": "search_data_classes",
    "description": "POST /data-classes/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_data_class_by_id",
    "description": "GET /data-classes/{dataClassId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        }
      },
      "required": [
        "dataClassId"
      ]
    }
  },
  {
    "name": "delete_data_class",
    "description": "DELETE /data-classes/{dataClassId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        }
      },
      "required": [
        "dataClassId"
      ]
    }
  },
  {
    "name": "update_data_class",
    "description": "PATCH /data-classes/{dataClassId}",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "default_algorithm_id": {
          "type": "string",
          "description": "Parameter default_algorithm_id of type str",
          "default": ""
        },
        "default_token_algorithm_id": {
          "type": "string",
          "description": "Parameter default_token_algorithm_id of type str",
          "default": ""
        },
        "algorithm_ids": {
          "type": "string",
          "description": "Parameter algorithm_ids of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "example": {
          "type": "string",
          "description": "Parameter example of type str"
        }
      },
      "required": [
        "example"
      ]
    }
  },
  {
    "name": "get_data_class_algorithms",
    "description": "GET /data-classes/{dataClassId}/algorithms",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_data_class_algorithms",
    "description": "POST /data-classes/{dataClassId}/algorithms/search",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_data_class_tags",
    "description": "GET /data-classes/{dataClassId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        }
      },
      "required": [
        "dataClassId"
      ]
    }
  },
  {
    "name": "create_data_class_tags",
    "description": "POST /data-classes/{dataClassId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "dataClassId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_data_class_tags",
    "description": "POST /data-classes/{dataClassId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "dataClassId": {
          "type": "string",
          "description": "Parameter dataClassId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_discovery_policies",
    "description": "GET /discovery-policies",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_discovery_policies",
    "description": "POST /discovery-policies/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_discovery_policy_by_id",
    "description": "GET /discovery-policies/{discoveryPolicyId}",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        }
      },
      "required": [
        "discoveryPolicyId"
      ]
    }
  },
  {
    "name": "get_discovery_policy_classifiers",
    "description": "GET /discovery-policies/{discoveryPolicyId}/classifiers",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_discovery_policy_classifiers",
    "description": "POST /discovery-policies/{discoveryPolicyId}/classifiers/search",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_discovery_policy_expressions",
    "description": "GET /discovery-policies/{discoveryPolicyId}/expressions",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_discovery_policy_expressions",
    "description": "POST /discovery-policies/{discoveryPolicyId}/expressions/search",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_discovery_policy_tags",
    "description": "GET /discovery-policies/{discoveryPolicyId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        }
      },
      "required": [
        "discoveryPolicyId"
      ]
    }
  },
  {
    "name": "create_discovery_policy_tags",
    "description": "POST /discovery-policies/{discoveryPolicyId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "discoveryPolicyId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_discovery_policy_tags",
    "description": "POST /discovery-policies/{discoveryPolicyId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "discoveryPolicyId": {
          "type": "string",
          "description": "Parameter discoveryPolicyId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_executions",
    "description": "GET /executions",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_executions",
    "description": "POST /executions/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_execution_by_id",
    "description": "GET /executions/{executionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        }
      },
      "required": [
        "executionId"
      ]
    }
  },
  {
    "name": "cancel_execution",
    "description": "POST /executions/{executionId}/cancel",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str",
          "default": ""
        },
        "expected_status": {
          "type": "string",
          "description": "Parameter expected_status of type str"
        }
      },
      "required": [
        "expected_status"
      ]
    }
  },
  {
    "name": "restart_execution",
    "description": "POST /executions/{executionId}/restart",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        }
      },
      "required": [
        "executionId"
      ]
    }
  },
  {
    "name": "cleanup_execution",
    "description": "POST /executions/{executionId}/cleanup",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        }
      },
      "required": [
        "executionId"
      ]
    }
  },
  {
    "name": "get_execution_events",
    "description": "GET /executions/{executionId}/events",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_execution_events",
    "description": "POST /executions/{executionId}/events/search",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_execution_log",
    "description": "GET /executions/{executionId}/log",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        }
      },
      "required": [
        "executionId"
      ]
    }
  },
  {
    "name": "get_execution_components",
    "description": "GET /executions/{executionId}/execution-components",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_execution_components",
    "description": "POST /executions/{executionId}/execution-components/search",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_execution_component_by_id",
    "description": "GET /executions/{executionId}/execution-components/{executionComponentId}",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "executionComponentId": {
          "type": "string",
          "description": "Parameter executionComponentId of type str"
        }
      },
      "required": [
        "executionId",
        "executionComponentId"
      ]
    }
  },
  {
    "name": "get_execution_component_log",
    "description": "GET /executions/{executionId}/execution-components/{executionComponentId}/log",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "executionComponentId": {
          "type": "string",
          "description": "Parameter executionComponentId of type str"
        }
      },
      "required": [
        "executionId",
        "executionComponentId"
      ]
    }
  },
  {
    "name": "get_discovery_results",
    "description": "GET /executions/{executionId}/discovery-results",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_discovery_results",
    "description": "POST /executions/{executionId}/discovery-results/search",
    "parameters": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "Parameter executionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_masking_files",
    "description": "GET /masking-file-uploads",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "upload_masking_file",
    "description": "POST /masking-file-uploads",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "get_masking_file_by_id",
    "description": "GET /masking-file-uploads/{maskingFileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        }
      },
      "required": [
        "maskingFileId"
      ]
    }
  },
  {
    "name": "update_masking_file_upload_by_id",
    "description": "PATCH /masking-file-uploads/{maskingFileId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        }
      },
      "required": [
        "maskingFileId",
        "description"
      ]
    }
  },
  {
    "name": "search_masking_files",
    "description": "POST /masking-file-uploads/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_file_tags",
    "description": "GET /masking-file-uploads/{maskingFileId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        }
      },
      "required": [
        "maskingFileId"
      ]
    }
  },
  {
    "name": "create_masking_file_tags",
    "description": "POST /masking-file-uploads/{maskingFileId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "maskingFileId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_masking_file_tags",
    "description": "POST /masking-file-uploads/{maskingFileId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_masking_file_consumers",
    "description": "GET /masking-file-uploads/{maskingFileId}/consumers",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_masking_file_consumers",
    "description": "POST /masking-file-uploads/{maskingFileId}/consumers/search",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingFileId": {
          "type": "string",
          "description": "Parameter maskingFileId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_masking_jobs",
    "description": "GET /masking-jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_masking_job",
    "description": "POST /masking-jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "job_type": {
          "type": "string",
          "description": "Parameter job_type of type str",
          "default": ""
        },
        "hyperscale_instance_id": {
          "type": "string",
          "description": "Parameter hyperscale_instance_id of type str",
          "default": ""
        },
        "source_masking_job_id": {
          "type": "string",
          "description": "Parameter source_masking_job_id of type str",
          "default": ""
        },
        "hyperscale_source_connector_username": {
          "type": "string",
          "description": "Parameter hyperscale_source_connector_username of type str",
          "default": ""
        },
        "hyperscale_source_connector_password": {
          "type": "string",
          "description": "Parameter hyperscale_source_connector_password of type str",
          "default": ""
        },
        "hyperscale_target_connector_username": {
          "type": "string",
          "description": "Parameter hyperscale_target_connector_username of type str",
          "default": ""
        },
        "hyperscale_target_connector_password": {
          "type": "string",
          "description": "Parameter hyperscale_target_connector_password of type str",
          "default": ""
        },
        "mount_point_id": {
          "type": "string",
          "description": "Parameter mount_point_id of type str",
          "default": ""
        },
        "unload_split": {
          "type": "integer",
          "description": "Parameter unload_split of type int"
        },
        "stream_size": {
          "type": "integer",
          "description": "Parameter stream_size of type int"
        },
        "retain_execution_data": {
          "type": "string",
          "description": "Parameter retain_execution_data of type str",
          "default": ""
        },
        "max_memory": {
          "type": "integer",
          "description": "Parameter max_memory of type int"
        },
        "min_memory": {
          "type": "integer",
          "description": "Parameter min_memory of type int"
        },
        "feedback_size": {
          "type": "integer",
          "description": "Parameter feedback_size of type int"
        },
        "stream_row_limit": {
          "type": "integer",
          "description": "Parameter stream_row_limit of type int"
        },
        "num_input_streams": {
          "type": "integer",
          "description": "Parameter num_input_streams of type int"
        },
        "max_concurrent_source_connections": {
          "type": "integer",
          "description": "Parameter max_concurrent_source_connections of type int"
        },
        "max_concurrent_target_connections": {
          "type": "integer",
          "description": "Parameter max_concurrent_target_connections of type int"
        },
        "parallelism_degree": {
          "type": "integer",
          "description": "Parameter parallelism_degree of type int"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": []
    }
  },
  {
    "name": "search_masking_jobs",
    "description": "POST /masking-jobs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_job_source_engines",
    "description": "GET /masking-jobs/source-engines",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_masking_job_source_engines",
    "description": "POST /masking-jobs/source-engines/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_job_by_id",
    "description": "GET /masking-jobs/{maskingJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        }
      },
      "required": [
        "maskingJobId"
      ]
    }
  },
  {
    "name": "delete_masking_job",
    "description": "DELETE /masking-jobs/{maskingJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        },
        "force": {
          "type": "boolean",
          "description": "Parameter force of type bool"
        }
      },
      "required": [
        "force"
      ]
    }
  },
  {
    "name": "update_masking_job_by_id",
    "description": "PATCH /masking-jobs/{maskingJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "connector_username": {
          "type": "string",
          "description": "Parameter connector_username of type str",
          "default": ""
        },
        "connector_password": {
          "type": "string",
          "description": "Parameter connector_password of type str",
          "default": ""
        },
        "on_the_fly_source_connector_username": {
          "type": "string",
          "description": "Parameter on_the_fly_source_connector_username of type str",
          "default": ""
        },
        "on_the_fly_source_connector_password": {
          "type": "string",
          "description": "Parameter on_the_fly_source_connector_password of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "dataset_id": {
          "type": "string",
          "description": "Parameter dataset_id of type str",
          "default": ""
        },
        "retain_execution_data": {
          "type": "string",
          "description": "Parameter retain_execution_data of type str"
        },
        "max_memory": {
          "type": "integer",
          "description": "Parameter max_memory of type int"
        },
        "min_memory": {
          "type": "integer",
          "description": "Parameter min_memory of type int"
        },
        "feedback_size": {
          "type": "integer",
          "description": "Parameter feedback_size of type int"
        },
        "stream_row_limit": {
          "type": "integer",
          "description": "Parameter stream_row_limit of type int"
        },
        "num_input_streams": {
          "type": "integer",
          "description": "Parameter num_input_streams of type int"
        },
        "max_concurrent_source_connections": {
          "type": "integer",
          "description": "Parameter max_concurrent_source_connections of type int"
        },
        "max_concurrent_target_connections": {
          "type": "integer",
          "description": "Parameter max_concurrent_target_connections of type int"
        },
        "parallelism_degree": {
          "type": "integer",
          "description": "Parameter parallelism_degree of type int"
        }
      },
      "required": [
        "parallelism_degree"
      ]
    }
  },
  {
    "name": "copy_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/copy",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "target_engine_id": {
          "type": "string",
          "description": "Parameter target_engine_id of type str",
          "default": ""
        },
        "source_environment_id": {
          "type": "string",
          "description": "Parameter source_environment_id of type str"
        },
        "target_environment_id": {
          "type": "string",
          "description": "Parameter target_environment_id of type str"
        },
        "force_overwrite": {
          "type": "boolean",
          "description": "Parameter force_overwrite of type bool"
        }
      },
      "required": [
        "target_environment_id",
        "force_overwrite"
      ]
    }
  },
  {
    "name": "migrate_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/migrate",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "target_engine_id": {
          "type": "string",
          "description": "Parameter target_engine_id of type str",
          "default": ""
        },
        "source_environment_id": {
          "type": "string",
          "description": "Parameter source_environment_id of type str"
        },
        "target_environment_id": {
          "type": "string",
          "description": "Parameter target_environment_id of type str"
        },
        "force_overwrite": {
          "type": "boolean",
          "description": "Parameter force_overwrite of type bool"
        }
      },
      "required": [
        "target_environment_id",
        "force_overwrite"
      ]
    }
  },
  {
    "name": "get_masking_job_connectors",
    "description": "GET /masking-jobs/{maskingJobId}/connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        }
      },
      "required": [
        "maskingJobId"
      ]
    }
  },
  {
    "name": "execute_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/execute",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "engine_id"
      ]
    }
  },
  {
    "name": "re_import_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/re-import",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        }
      },
      "required": [
        "maskingJobId"
      ]
    }
  },
  {
    "name": "get_masking_job_tag",
    "description": "GET /masking-jobs/{maskingJobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        }
      },
      "required": [
        "maskingJobId"
      ]
    }
  },
  {
    "name": "create_masking_job_tag",
    "description": "POST /masking-jobs/{maskingJobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "maskingJobId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_masking_job_tag",
    "description": "POST /masking-jobs/{maskingJobId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "add_engine_to_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/add-engine",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "engine_id"
      ]
    }
  },
  {
    "name": "remove_engine_from_masking_job",
    "description": "POST /masking-jobs/{maskingJobId}/remove-engine",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingJobId": {
          "type": "string",
          "description": "Parameter maskingJobId of type str",
          "default": ""
        },
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str"
        }
      },
      "required": [
        "engine_id"
      ]
    }
  },
  {
    "name": "get_algorithms",
    "description": "GET /algorithms",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_algorithm",
    "description": "POST /algorithms",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "config": {
          "type": "string",
          "description": "Parameter config of type str",
          "default": ""
        },
        "framework_id": {
          "type": "string",
          "description": "Parameter framework_id of type str"
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "data_class_ids": {
          "type": "string",
          "description": "Parameter data_class_ids of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "data_class_ids",
        "make_current_account_owner",
        "tags"
      ]
    }
  },
  {
    "name": "get_algorithm_by_id",
    "description": "GET /algorithms/{algorithmId}",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        }
      },
      "required": [
        "algorithmId"
      ]
    }
  },
  {
    "name": "delete_algorithm",
    "description": "DELETE /algorithms/{algorithmId}",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        }
      },
      "required": [
        "algorithmId"
      ]
    }
  },
  {
    "name": "update_algorithm",
    "description": "PATCH /algorithms/{algorithmId}",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "config": {
          "type": "string",
          "description": "Parameter config of type str"
        }
      },
      "required": [
        "config"
      ]
    }
  },
  {
    "name": "search_algorithms",
    "description": "POST /algorithms/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_algorithm_tags",
    "description": "GET /algorithms/{algorithmId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        }
      },
      "required": [
        "algorithmId"
      ]
    }
  },
  {
    "name": "create_algorithm_tags",
    "description": "POST /algorithms/{algorithmId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "algorithmId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_algorithm_tags",
    "description": "POST /algorithms/{algorithmId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_algorithm_dependencies_by_id",
    "description": "GET /algorithms/{algorithmId}/dependencies",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        }
      },
      "required": [
        "algorithmId"
      ]
    }
  },
  {
    "name": "search_algorithm_dependencies",
    "description": "POST /algorithms/{algorithmId}/dependencies/search",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmId": {
          "type": "string",
          "description": "Parameter algorithmId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "validate_algorithm_config",
    "description": "POST /algorithms/validate-config",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "config": {
          "type": "string",
          "description": "Parameter config of type str"
        },
        "framework_id": {
          "type": "string",
          "description": "Parameter framework_id of type str"
        }
      },
      "required": [
        "name",
        "config",
        "framework_id"
      ]
    }
  },
  {
    "name": "get_masking_environments",
    "description": "GET /masking-environments",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_masking_environments",
    "description": "POST /masking-environments/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_environment_by_id",
    "description": "GET /masking-environments/{maskingEnvironmentId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingEnvironmentId": {
          "type": "string",
          "description": "Parameter maskingEnvironmentId of type str"
        }
      },
      "required": [
        "maskingEnvironmentId"
      ]
    }
  },
  {
    "name": "get_masking_plugins",
    "description": "GET /masking-plugins",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_masking_plugin_by_id",
    "description": "GET /masking-plugins/{maskingPluginId}",
    "parameters": {
      "type": "object",
      "properties": {
        "maskingPluginId": {
          "type": "string",
          "description": "Parameter maskingPluginId of type str"
        }
      },
      "required": [
        "maskingPluginId"
      ]
    }
  },
  {
    "name": "search_masking_plugins",
    "description": "POST /masking-plugins/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_algorithm_framework_by_id",
    "description": "GET /algorithm-frameworks/{algorithmFrameworkId}",
    "parameters": {
      "type": "object",
      "properties": {
        "algorithmFrameworkId": {
          "type": "string",
          "description": "Parameter algorithmFrameworkId of type str"
        }
      },
      "required": [
        "algorithmFrameworkId"
      ]
    }
  },
  {
    "name": "get_rule_sets",
    "description": "GET /rule-sets",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_rule_set",
    "description": "POST /rule-sets",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "connector_id": {
          "type": "string",
          "description": "Parameter connector_id of type str"
        },
        "refresh_drops_tables": {
          "type": "boolean",
          "description": "Parameter refresh_drops_tables of type bool",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "make_current_account_owner",
        "tags"
      ]
    }
  },
  {
    "name": "search_rule_sets",
    "description": "POST /rule-sets/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_rule_set_by_id",
    "description": "GET /rule-sets/{ruleSetId}",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str"
        }
      },
      "required": [
        "ruleSetId"
      ]
    }
  },
  {
    "name": "delete_rule_set",
    "description": "DELETE /rule-sets/{ruleSetId}",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str"
        }
      },
      "required": [
        "ruleSetId"
      ]
    }
  },
  {
    "name": "update_rule_set",
    "description": "PATCH /rule-sets/{ruleSetId}",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str"
        },
        "refresh_drops_tables": {
          "type": "boolean",
          "description": "Parameter refresh_drops_tables of type bool"
        }
      },
      "required": [
        "refresh_drops_tables"
      ]
    }
  },
  {
    "name": "get_rule_set_tags",
    "description": "GET /rule-sets/{ruleSetId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str"
        }
      },
      "required": [
        "ruleSetId"
      ]
    }
  },
  {
    "name": "create_rule_set_tags",
    "description": "POST /rule-sets/{ruleSetId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "ruleSetId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_rule_set_tags",
    "description": "POST /rule-sets/{ruleSetId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "ruleSetId": {
          "type": "string",
          "description": "Parameter ruleSetId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_database_table_metadata",
    "description": "GET /database-table-metadata",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_database_table_metadata",
    "description": "POST /database-table-metadata/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_database_column_metadata",
    "description": "GET /database-column-metadata",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_database_column_metadata",
    "description": "POST /database-column-metadata/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_discovery_expressions",
    "description": "GET /discovery-expressions",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_discovery_expressions",
    "description": "POST /discovery-expressions/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_discovery_expression_by_id",
    "description": "GET /discovery-expressions/{expressionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "expressionId": {
          "type": "string",
          "description": "Parameter expressionId of type str"
        }
      },
      "required": [
        "expressionId"
      ]
    }
  },
  {
    "name": "get_discovery_expression_tags",
    "description": "GET /discovery-expressions/{expressionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "expressionId": {
          "type": "string",
          "description": "Parameter expressionId of type str"
        }
      },
      "required": [
        "expressionId"
      ]
    }
  },
  {
    "name": "create_discovery_expression_tags",
    "description": "POST /discovery-expressions/{expressionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "expressionId": {
          "type": "string",
          "description": "Parameter expressionId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "expressionId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_discovery_expression_tags",
    "description": "POST /discovery-expressions/{expressionId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "expressionId": {
          "type": "string",
          "description": "Parameter expressionId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_compliance_jobs",
    "description": "GET /compliance-jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_compliance_job",
    "description": "POST /compliance-jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "rule_set_id": {
          "type": "string",
          "description": "Parameter rule_set_id of type str"
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        },
        "max_memory": {
          "type": "integer",
          "description": "Parameter max_memory of type int"
        },
        "min_memory": {
          "type": "integer",
          "description": "Parameter min_memory of type int"
        },
        "feedback_size": {
          "type": "integer",
          "description": "Parameter feedback_size of type int"
        },
        "stream_row_limit": {
          "type": "integer",
          "description": "Parameter stream_row_limit of type int"
        },
        "num_input_streams": {
          "type": "integer",
          "description": "Parameter num_input_streams of type int"
        },
        "fail_immediately": {
          "type": "boolean",
          "description": "Parameter fail_immediately of type bool"
        },
        "batch_update": {
          "type": "boolean",
          "description": "Parameter batch_update of type bool"
        },
        "commit_size": {
          "type": "integer",
          "description": "Parameter commit_size of type int"
        },
        "num_output_threads_per_stream": {
          "type": "integer",
          "description": "Parameter num_output_threads_per_stream of type int",
          "default": ""
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "make_current_account_owner",
        "tags"
      ]
    }
  },
  {
    "name": "search_compliance_jobs",
    "description": "POST /compliance-jobs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_compliance_job_by_id",
    "description": "GET /compliance-jobs/{complianceJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        }
      },
      "required": [
        "complianceJobId"
      ]
    }
  },
  {
    "name": "delete_compliance_job",
    "description": "DELETE /compliance-jobs/{complianceJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        }
      },
      "required": [
        "complianceJobId"
      ]
    }
  },
  {
    "name": "update_compliance_job",
    "description": "PATCH /compliance-jobs/{complianceJobId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "rule_set_id": {
          "type": "string",
          "description": "Parameter rule_set_id of type str"
        },
        "max_memory": {
          "type": "integer",
          "description": "Parameter max_memory of type int"
        },
        "min_memory": {
          "type": "integer",
          "description": "Parameter min_memory of type int"
        },
        "feedback_size": {
          "type": "integer",
          "description": "Parameter feedback_size of type int"
        },
        "stream_row_limit": {
          "type": "integer",
          "description": "Parameter stream_row_limit of type int"
        },
        "num_input_streams": {
          "type": "integer",
          "description": "Parameter num_input_streams of type int"
        },
        "fail_immediately": {
          "type": "boolean",
          "description": "Parameter fail_immediately of type bool"
        },
        "batch_update": {
          "type": "boolean",
          "description": "Parameter batch_update of type bool"
        },
        "commit_size": {
          "type": "integer",
          "description": "Parameter commit_size of type int"
        },
        "num_output_threads_per_stream": {
          "type": "integer",
          "description": "Parameter num_output_threads_per_stream of type int"
        }
      },
      "required": [
        "num_output_threads_per_stream"
      ]
    }
  },
  {
    "name": "get_compliance_job_connectors",
    "description": "GET /compliance-jobs/{complianceJobId}/connectors",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        }
      },
      "required": [
        "complianceJobId"
      ]
    }
  },
  {
    "name": "get_compliance_job_tag",
    "description": "GET /compliance-jobs/{complianceJobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        }
      },
      "required": [
        "complianceJobId"
      ]
    }
  },
  {
    "name": "create_compliance_job_tag",
    "description": "POST /compliance-jobs/{complianceJobId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "complianceJobId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_compliance_job_tag",
    "description": "POST /compliance-jobs/{complianceJobId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "execute_compliance_job",
    "description": "POST /compliance-jobs/{complianceJobId}/execute",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobId": {
          "type": "string",
          "description": "Parameter complianceJobId of type str"
        },
        "_placeholder": {
          "type": "boolean",
          "description": "Parameter _placeholder of type bool"
        }
      },
      "required": [
        "_placeholder"
      ]
    }
  },
  {
    "name": "get_compliance_job_collections",
    "description": "GET /compliance-job-collections",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_compliance_job_collection",
    "description": "POST /compliance-job-collections",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "failure_handling": {
          "type": "string",
          "description": "Parameter failure_handling of type str",
          "default": ""
        },
        "members": {
          "type": "string",
          "description": "Parameter members of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "search_compliance_job_collections",
    "description": "POST /compliance-job-collections/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_compliance_job_collection_by_id",
    "description": "GET /compliance-job-collections/{complianceJobCollectionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        }
      },
      "required": [
        "complianceJobCollectionId"
      ]
    }
  },
  {
    "name": "delete_compliance_job_collection",
    "description": "DELETE /compliance-job-collections/{complianceJobCollectionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        }
      },
      "required": [
        "complianceJobCollectionId"
      ]
    }
  },
  {
    "name": "update_compliance_job_collection",
    "description": "PATCH /compliance-job-collections/{complianceJobCollectionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "failure_handling": {
          "type": "string",
          "description": "Parameter failure_handling of type str",
          "default": ""
        },
        "members": {
          "type": "string",
          "description": "Parameter members of type str"
        }
      },
      "required": [
        "members"
      ]
    }
  },
  {
    "name": "execute_compliance_job_collection",
    "description": "POST /compliance-job-collections/{complianceJobCollectionId}/execute",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        },
        "_placeholder": {
          "type": "boolean",
          "description": "Parameter _placeholder of type bool"
        }
      },
      "required": [
        "_placeholder"
      ]
    }
  },
  {
    "name": "get_compliance_job_collection_jobs",
    "description": "GET /compliance-job-collections/{complianceJobCollectionId}/jobs",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str"
        }
      },
      "required": [
        "sort"
      ]
    }
  },
  {
    "name": "search_compliance_job_collection_jobs",
    "description": "POST /compliance-job-collections/{complianceJobCollectionId}/jobs/search",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        },
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int",
          "default": ""
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str"
        }
      },
      "required": [
        "filter_expression"
      ]
    }
  },
  {
    "name": "get_compliance_job_collection_tags",
    "description": "GET /compliance-job-collections/{complianceJobCollectionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        }
      },
      "required": [
        "complianceJobCollectionId"
      ]
    }
  },
  {
    "name": "create_compliance_job_collection_tags",
    "description": "POST /compliance-job-collections/{complianceJobCollectionId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "complianceJobCollectionId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_compliance_job_collection_tags",
    "description": "POST /compliance-job-collections/{complianceJobCollectionId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "complianceJobCollectionId": {
          "type": "string",
          "description": "Parameter complianceJobCollectionId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "get_job_collection_executions",
    "description": "GET /job-collection-executions",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "search_job_collection_executions",
    "description": "POST /job-collection-executions/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_job_collection_execution_by_id",
    "description": "GET /job-collection-executions/{jobCollectionExecutionId}",
    "parameters": {
      "type": "object",
      "properties": {
        "jobCollectionExecutionId": {
          "type": "string",
          "description": "Parameter jobCollectionExecutionId of type str"
        }
      },
      "required": [
        "jobCollectionExecutionId"
      ]
    }
  },
  {
    "name": "cancel_job_collection_execution",
    "description": "POST /job-collection-executions/{jobCollectionExecutionId}/cancel",
    "parameters": {
      "type": "object",
      "properties": {
        "jobCollectionExecutionId": {
          "type": "string",
          "description": "Parameter jobCollectionExecutionId of type str"
        },
        "_placeholder": {
          "type": "boolean",
          "description": "Parameter _placeholder of type bool"
        }
      },
      "required": [
        "_placeholder"
      ]
    }
  },
  {
    "name": "get_job_orchestrators",
    "description": "GET /job-orchestrators",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "create_job_orchestrator",
    "description": "POST /job-orchestrators",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        },
        "make_current_account_owner": {
          "type": "boolean",
          "description": "Parameter make_current_account_owner of type bool"
        }
      },
      "required": [
        "make_current_account_owner"
      ]
    }
  },
  {
    "name": "search_job_orchestrators",
    "description": "POST /job-orchestrators/search",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Parameter limit of type int"
        },
        "cursor": {
          "type": "string",
          "description": "Parameter cursor of type str",
          "default": ""
        },
        "sort": {
          "type": "string",
          "description": "Parameter sort of type str",
          "default": ""
        },
        "filter_expression": {
          "type": "string",
          "description": "Parameter filter_expression of type str",
          "default": ""
        }
      },
      "required": []
    }
  },
  {
    "name": "get_job_orchestrator_by_id",
    "description": "GET /job-orchestrators/{jobOrchestratorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str"
        }
      },
      "required": [
        "jobOrchestratorId"
      ]
    }
  },
  {
    "name": "delete_job_orchestrator",
    "description": "DELETE /job-orchestrators/{jobOrchestratorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str"
        }
      },
      "required": [
        "jobOrchestratorId"
      ]
    }
  },
  {
    "name": "update_job_orchestrator",
    "description": "PATCH /job-orchestrators/{jobOrchestratorId}",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Parameter name of type str",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Parameter description of type str"
        }
      },
      "required": [
        "description"
      ]
    }
  },
  {
    "name": "get_job_orchestrator_tags",
    "description": "GET /job-orchestrators/{jobOrchestratorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str"
        }
      },
      "required": [
        "jobOrchestratorId"
      ]
    }
  },
  {
    "name": "create_job_orchestrator_tags",
    "description": "POST /job-orchestrators/{jobOrchestratorId}/tags",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str"
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "jobOrchestratorId",
        "tags"
      ]
    }
  },
  {
    "name": "delete_job_orchestrator_tags",
    "description": "POST /job-orchestrators/{jobOrchestratorId}/tags/delete",
    "parameters": {
      "type": "object",
      "properties": {
        "jobOrchestratorId": {
          "type": "string",
          "description": "Parameter jobOrchestratorId of type str",
          "default": ""
        },
        "key": {
          "type": "string",
          "description": "Parameter key of type str",
          "default": ""
        },
        "value": {
          "type": "string",
          "description": "Parameter value of type str",
          "default": ""
        },
        "tags": {
          "type": "string",
          "description": "Parameter tags of type str"
        }
      },
      "required": [
        "tags"
      ]
    }
  },
  {
    "name": "sync_export",
    "description": "POST /sync-export",
    "parameters": {
      "type": "object",
      "properties": {
        "engine_id": {
          "type": "string",
          "description": "Parameter engine_id of type str",
          "default": ""
        },
        "application_name": {
          "type": "string",
          "description": "Parameter application_name of type str",
          "default": ""
        },
        "object_type": {
          "type": "string",
          "description": "Parameter object_type of type str",
          "default": ""
        },
        "object_ids": {
          "type": "string",
          "description": "Parameter object_ids of type str",
          "default": ""
        }
      },
      "required": []
    }
  }
]
